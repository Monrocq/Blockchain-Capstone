{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proprio",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "acquereur",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "emiter",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "submitted",
          "type": "bool"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "emiter",
          "type": "address"
        }
      ],
      "name": "UnPaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "togglePause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        },
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Pairing.G1Point",
                  "name": "a",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "X",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "Y",
                      "type": "uint256[2]"
                    }
                  ],
                  "internalType": "struct Pairing.G2Point",
                  "name": "b",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "X",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "Y",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Pairing.G1Point",
                  "name": "c",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Verifier.Proof",
              "name": "proof",
              "type": "tuple"
            },
            {
              "internalType": "uint256[1]",
              "name": "input",
              "type": "uint256[1]"
            }
          ],
          "internalType": "struct SolnSquareVerifier.Checker",
          "name": "checker",
          "type": "tuple"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proprio\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"acquereur\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"emiter\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"submitted\",\"type\":\"bool\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"emiter\",\"type\":\"address\"}],\"name\":\"UnPaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[1]\",\"name\":\"input\",\"type\":\"uint256[1]\"}],\"internalType\":\"struct SolnSquareVerifier.Checker\",\"name\":\"checker\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x69a50f66fdb0f6f8db32bf69ed5c595fe471a4d387cf3e7ed6dc6727e8498cf0\",\"urls\":[\"bzz-raw://a75eae843ecc60ee707cdf9486312a5951caf299f8ecf530eeab774890b5b097\",\"dweb:/ipfs/QmTkuFusjKjziwMn42t3D13ScjeAyKpcZN52YAkgX1AggD\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x482a58558c58b14e19b367dcbe51f04c8c551845300cca62bd87ba51c2bdf220\",\"urls\":[\"bzz-raw://2434655802766d57319447bbdecaba73c1709acb897651e91e559b504e5464a6\",\"dweb:/ipfs/QmeTvhkJNPnFt5sJjiMNbieq2H7ydKo35KvBco5Y8DQZcf\"]},\"project:/contracts/verifier.sol\":{\"keccak256\":\"0x15624cce9b7a17632084dc4dd7fc353545356d95db4bdc042183ce74e0813a3c\",\"urls\":[\"bzz-raw://97bf8f7ecf1d6d6877f13529a1367c3115a2ed5c248c9edaeb566f4e94cf981b\",\"dweb:/ipfs/QmT6i2rbtwWqRrYuDVxQTiz1onWGyxQSFpscKekAMbW6Hk\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280601781526020017f5265616c20457374617465204d61726b6574706c6163650000000000000000008152506040518060400160405280600381526020017f52454d000000000000000000000000000000000000000000000000000000000081525081816040518060600160405280603f815260200162003955603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff0219169083151502179055506200010c6301ffc9a760e01b620001aa60201b60201c565b620001246380ac58cd60e01b620001aa60201b60201c565b6200013c63780e9d6360e01b620001aa60201b60201c565b82600f9080519060200190620001549291906200024a565b5081601090805190602001906200016d9291906200024a565b508060119080519060200190620001869291906200024a565b506200019f635b5e139f60e01b620001aa60201b60201c565b5050505050620002f9565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001de57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028d57805160ff1916838001178555620002be565b82800160010185558215620002be579182015b82811115620002bd578251825591602001919060010190620002a0565b5b509050620002cd9190620002d1565b5090565b620002f691905b80821115620002f2576000816000905550600101620002d8565b5090565b90565b61364c80620003096000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636352211e116100de578063b88d4fde11610097578063d3fc986411610071578063d3fc986414610446578063d547cfb714610476578063e985e9c514610494578063f2fde38b146104c457610173565b8063b88d4fde146103f0578063c4ae31681461040c578063c87b56dd1461041657610173565b80636352211e1461031c57806370a082311461034c5780638da5cb5b1461037c5780638ee41a091461039a57806395d89b41146103b6578063a22cb465146103d457610173565b806327dc297e1161013057806327dc297e1461024c5780632f745c591461026857806338bbfa501461029857806342842e0e146102b45780634f6ccce7146102d0578063589945881461030057610173565b806301ffc9a71461017857806306fdde03146101a8578063081812fc146101c6578063095ea7b3146101f657806318160ddd1461021257806323b872dd14610230575b600080fd5b610192600480360361018d9190810190612b8d565b6104e0565b60405161019f9190613191565b60405180910390f35b6101b0610548565b6040516101bd91906131ac565b60405180910390f35b6101e060048036036101db9190810190612bdf565b6105ea565b6040516101ed919061312a565b60405180910390f35b610210600480360361020b91908101906129ee565b610627565b005b61021a6107d9565b6040516102279190613319565b60405180910390f35b61024a60048036036102459190810190612880565b6107e6565b005b61026660048036036102619190810190612aba565b610809565b005b610282600480360361027d91908101906129ee565b61084c565b60405161028f9190613319565b60405180910390f35b6102b260048036036102ad9190810190612b0e565b6108bf565b005b6102ce60048036036102c99190810190612880565b6108c4565b005b6102ea60048036036102e59190810190612bdf565b6108e4565b6040516102f79190613319565b60405180910390f35b61031a60048036036103159190810190612bdf565b610918565b005b61033660048036036103319190810190612bdf565b610aa6565b604051610343919061312a565b60405180910390f35b6103666004803603610361919081019061281b565b610ae3565b6040516103739190613319565b60405180910390f35b610384610b33565b604051610391919061312a565b60405180910390f35b6103b460048036036103af9190810190612986565b610b5c565b005b6103be610eb8565b6040516103cb91906131ac565b60405180910390f35b6103ee60048036036103e9919081019061294a565b610f5a565b005b61040a600480360361040591908101906128cf565b611090565b005b6104146110b6565b005b610430600480360361042b9190810190612bdf565b611171565b60405161043d91906131ac565b60405180910390f35b610460600480360361045b9190810190612a2a565b611238565b60405161046d9190613191565b60405180910390f35b61047e6112e8565b60405161048b91906131ac565b60405180910390f35b6104ae60048036036104a99190810190612844565b61138a565b6040516104bb9190613191565b60405180910390f35b6104de60048036036104d9919081019061281b565b61141e565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061063282610aa6565b90506002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cd9061320e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061071e575061071d61071783610aa6565b3361138a565b5b61072757600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b6107f033826115ba565b6107f957600080fd5b61080483838361164f565b505050565b610848828260006040519080825280601f01601f1916602001820160405280156108425781602001600182028038833980820191505090505b506108bf565b5050565b600061085783610ae3565b821061086257600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106108ac57fe5b9060005260206000200154905092915050565b505050565b6108df83838360405180602001604052806000815250611090565b505050565b60006108ee6107d9565b82106108f957600080fd5b6008828154811061090657fe5b90600052602060002001549050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099e906131ce565b60405180910390fd5b601460405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050503373ffffffffffffffffffffffffffffffffffffffff16817f01294b83361f7715b695189a469e96a6302a388f977ab3227ae6dbf84206e2836000604051610a9b9190613191565b60405180910390a350565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b2c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611673565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f48d7729826000015183602001516040518363ffffffff1660e01b8152600401610bc19291906132ee565b60206040518083038186803b158015610bd957600080fd5b505afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c119190810190612a91565b610c50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c479061324e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16601560008360200151600060018110610c7d57fe5b6020020151815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d01906132ce565b60405180910390fd5b60008090505b601480549050811015610e77578160200151600060018110610d2e57fe5b602002015160148281548110610d4057fe5b906000526020600020906002020160000154148015610d75575060008260200151600060018110610d6d57fe5b602002015114155b15610e6a57600060148281548110610d8957fe5b9060005260206000209060020201905060148281548110610da657fe5b9060005260206000209060020201601560008560200151600060018110610dc957fe5b60200201518152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610e6285610e5c6107d9565b86611238565b505050610eb3565b8080600101915050610d10565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaa9061326e565b60405180910390fd5b505050565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f505780601f10610f2557610100808354040283529160200191610f50565b820191906000526020600020905b815481529060010190602001808311610f3357829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f9357600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110849190613191565b60405180910390a35050565b61109b8484846107e6565b6110a784848484611681565b6110b057600080fd5b50505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611145576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113c906131ce565b60405180910390fd5b600060149054906101000a900460ff1615600060146101000a81548160ff021916908315150217905550565b606061117c82611798565b61118557600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561122c5780601f106112015761010080835404028352916020019161122c565b820191906000526020600020905b81548152906001019060200180831161120f57829003601f168201915b50505050509050919050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c0906131ce565b60405180910390fd5b6112d3848461180a565b6112dd838361182b565b600190509392505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113805780601f1061135557610100808354040283529160200191611380565b820191906000526020600020905b81548152906001019060200180831161136357829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a4906131ce565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561151d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115149061328e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806115c683610aa6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061163557508373ffffffffffffffffffffffffffffffffffffffff1661161d846105ea565b73ffffffffffffffffffffffffffffffffffffffff16145b806116465750611645818561138a565b5b91505092915050565b61165a83838361190c565b6116648382611b85565b61166e8282611d23565b505050565b600081600001549050919050565b60006116a28473ffffffffffffffffffffffffffffffffffffffff16611dea565b6116af5760019050611790565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016116f09493929190613145565b602060405180830381600087803b15801561170a57600080fd5b505af115801561171e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117429190810190612bb6565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6118148282611e35565b61181e8282611d23565b61182781611fb0565b5050565b61183482611798565b61183d57600080fd5b6118e160118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118d65780601f106118ab576101008083540402835291602001916118d6565b820191906000526020600020905b8154815290600101906020018083116118b957829003601f168201915b505050505082611ffc565b6012600084815260200190815260200160002090805190602001906119079291906123e0565b505050565b61191581610aa6565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611982576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119799061322e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e9906132ae565b60405180910390fd5b60006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a8c600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612040565b611ad3600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612063565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611bdd6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061207990919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611cca576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611c4a57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611ca257fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611d1c9190612460565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611e2c57506000801b8214155b92505050919050565b611e3e81611798565b158015611e785750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b611eb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eae906131ee565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f50600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612063565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606061203883836040518060200160405280600081525060405180602001604052806000815250604051806020016040528060008152506120c3565b905092915050565b6120586001826000015461207990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b60006120bb83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612385565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f19166020018201604052801561211f5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156121a45788818151811061214b57fe5b602001015160f81c60f81b83838060010194508151811061216857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612136565b600090505b8751811015612217578781815181106121be57fe5b602001015160f81c60f81b8383806001019450815181106121db57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121a9565b600090505b865181101561228a5786818151811061223157fe5b602001015160f81c60f81b83838060010194508151811061224e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061221c565b600090505b85518110156122fd578581815181106122a457fe5b602001015160f81c60f81b8383806001019450815181106122c157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061228f565b600090505b84518110156123705784818151811061231757fe5b602001015160f81c60f81b83838060010194508151811061233457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612302565b82995050505050505050505095945050505050565b60008383111582906123cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123c491906131ac565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061242157805160ff191683800117855561244f565b8280016001018555821561244f579182015b8281111561244e578251825591602001919060010190612433565b5b50905061245c919061248c565b5090565b81548183558181111561248757818360005260206000209182019101612486919061248c565b5b505050565b6124ae91905b808211156124aa576000816000905550600101612492565b5090565b90565b6000813590506124c081613596565b92915050565b600082601f8301126124d757600080fd5b60016124ea6124e582613361565b613334565b9150818385602084028201111561250057600080fd5b60005b8381101561253057816125168882612806565b845260208401935060208301925050600181019050612503565b5050505092915050565b600082601f83011261254b57600080fd5b600261255e61255982613383565b613334565b9150818385602084028201111561257457600080fd5b60005b838110156125a4578161258a8882612806565b845260208401935060208301925050600181019050612577565b5050505092915050565b6000813590506125bd816135ad565b92915050565b6000815190506125d2816135ad565b92915050565b6000813590506125e7816135c4565b92915050565b6000813590506125fc816135db565b92915050565b600081519050612611816135db565b92915050565b600082601f83011261262857600080fd5b813561263b612636826133a5565b613334565b9150808252602083016020830185838301111561265757600080fd5b612662838284613543565b50505092915050565b600082601f83011261267c57600080fd5b813561268f61268a826133d1565b613334565b915080825260208301602083018583830111156126ab57600080fd5b6126b6838284613543565b50505092915050565b600061012082840312156126d257600080fd5b6126dc6040613334565b905060006126ec848285016127a5565b600083015250610100612701848285016124c6565b60208301525092915050565b60006040828403121561271f57600080fd5b6127296040613334565b9050600061273984828501612806565b600083015250602061274d84828501612806565b60208301525092915050565b60006080828403121561276b57600080fd5b6127756040613334565b905060006127858482850161253a565b60008301525060406127998482850161253a565b60208301525092915050565b600061010082840312156127b857600080fd5b6127c26060613334565b905060006127d28482850161270d565b60008301525060406127e684828501612759565b60208301525060c06127fa8482850161270d565b60408301525092915050565b600081359050612815816135f2565b92915050565b60006020828403121561282d57600080fd5b600061283b848285016124b1565b91505092915050565b6000806040838503121561285757600080fd5b6000612865858286016124b1565b9250506020612876858286016124b1565b9150509250929050565b60008060006060848603121561289557600080fd5b60006128a3868287016124b1565b93505060206128b4868287016124b1565b92505060406128c586828701612806565b9150509250925092565b600080600080608085870312156128e557600080fd5b60006128f3878288016124b1565b9450506020612904878288016124b1565b935050604061291587828801612806565b925050606085013567ffffffffffffffff81111561293257600080fd5b61293e87828801612617565b91505092959194509250565b6000806040838503121561295d57600080fd5b600061296b858286016124b1565b925050602061297c858286016125ae565b9150509250929050565b6000806000610160848603121561299c57600080fd5b60006129aa868287016124b1565b935050602084013567ffffffffffffffff8111156129c757600080fd5b6129d38682870161266b565b92505060406129e4868287016126bf565b9150509250925092565b60008060408385031215612a0157600080fd5b6000612a0f858286016124b1565b9250506020612a2085828601612806565b9150509250929050565b600080600060608486031215612a3f57600080fd5b6000612a4d868287016124b1565b9350506020612a5e86828701612806565b925050604084013567ffffffffffffffff811115612a7b57600080fd5b612a878682870161266b565b9150509250925092565b600060208284031215612aa357600080fd5b6000612ab1848285016125c3565b91505092915050565b60008060408385031215612acd57600080fd5b6000612adb858286016125d8565b925050602083013567ffffffffffffffff811115612af857600080fd5b612b048582860161266b565b9150509250929050565b600080600060608486031215612b2357600080fd5b6000612b31868287016125d8565b935050602084013567ffffffffffffffff811115612b4e57600080fd5b612b5a8682870161266b565b925050604084013567ffffffffffffffff811115612b7757600080fd5b612b8386828701612617565b9150509250925092565b600060208284031215612b9f57600080fd5b6000612bad848285016125ed565b91505092915050565b600060208284031215612bc857600080fd5b6000612bd684828501612602565b91505092915050565b600060208284031215612bf157600080fd5b6000612bff84828501612806565b91505092915050565b6000612c14838361310c565b60208301905092915050565b612c298161350d565b82525050565b612c388161348f565b82525050565b612c4781613411565b612c518184613457565b9250612c5c826133fd565b8060005b83811015612c8d578151612c748782612c08565b9650612c7f8361343d565b925050600181019050612c60565b505050505050565b612c9e8161341c565b612ca88184613462565b9250612cb382613407565b8060005b83811015612ce4578151612ccb8782612c08565b9650612cd68361344a565b925050600181019050612cb7565b505050505050565b612cf5816134a1565b82525050565b6000612d0682613427565b612d10818561346d565b9350612d20818560208601613552565b612d2981613585565b840191505092915050565b6000612d3f82613432565b612d49818561347e565b9350612d59818560208601613552565b612d6281613585565b840191505092915050565b6000612d7a601f8361347e565b91507f6e65656473206265696e672063616c6c656420627920746865206f776e6572006000830152602082019050919050565b6000612dba60338361347e565b91507f5468697320746f6b656e20616c7265616479206d696e746564206f722074686560008301527f206164647265737320697320696e76616c6964000000000000000000000000006020830152604082019050919050565b6000612e2060398361347e565b91507f74686520676976656e20616464726573732073686f756c6420746f206e6f742060008301527f626520746865206f776e6572206f662074686520746f6b656e000000000000006020830152604082019050919050565b6000612e86602c8361347e565b91507f66726f6d20706172616d65746572206973206e6f7420746865206f776e65722060008301527f6f662074686520746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612eec60128361347e565b91507f57726f6e6720766572696669636174696f6e00000000000000000000000000006000830152602082019050919050565b6000612f2c601b8361347e565b91507f5468697320736f6c7574696f6e20646f65736e277420657869737400000000006000830152602082019050919050565b6000612f6c60308361347e565b91507f54686520706172616d657465722068617665206e6f7420706f696e7420746f2060008301527f746865207a65726f2061646472657373000000000000000000000000000000006020830152604082019050919050565b6000612fd2601e8361347e565b91507f746f20706172616d61746572206e6565647320746f2062652076616c696400006000830152602082019050919050565b600061301260238361347e565b91507f5468697320736f6c7574696f6e2068617320616c7265616479206265656e207560008301527f73656400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b604082016000820151613081600085018261310c565b506020820151613094602085018261310c565b50505050565b6080820160008201516130b06000850182612c95565b5060208201516130c36040850182612c95565b50505050565b610100820160008201516130e0600085018261306b565b5060208201516130f3604085018261309a565b50604082015161310660c085018261306b565b50505050565b61311581613503565b82525050565b61312481613503565b82525050565b600060208201905061313f6000830184612c2f565b92915050565b600060808201905061315a6000830187612c20565b6131676020830186612c2f565b613174604083018561311b565b81810360608301526131868184612cfb565b905095945050505050565b60006020820190506131a66000830184612cec565b92915050565b600060208201905081810360008301526131c68184612d34565b905092915050565b600060208201905081810360008301526131e781612d6d565b9050919050565b6000602082019050818103600083015261320781612dad565b9050919050565b6000602082019050818103600083015261322781612e13565b9050919050565b6000602082019050818103600083015261324781612e79565b9050919050565b6000602082019050818103600083015261326781612edf565b9050919050565b6000602082019050818103600083015261328781612f1f565b9050919050565b600060208201905081810360008301526132a781612f5f565b9050919050565b600060208201905081810360008301526132c781612fc5565b9050919050565b600060208201905081810360008301526132e781613005565b9050919050565b60006101208201905061330460008301856130c9565b613312610100830184612c3e565b9392505050565b600060208201905061332e600083018461311b565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561335757600080fd5b8060405250919050565b600067ffffffffffffffff82111561337857600080fd5b602082029050919050565b600067ffffffffffffffff82111561339a57600080fd5b602082029050919050565b600067ffffffffffffffff8211156133bc57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156133e857600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060019050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061349a826134e3565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006135188261351f565b9050919050565b600061352a82613531565b9050919050565b600061353c826134e3565b9050919050565b82818337600083830152505050565b60005b83811015613570578082015181840152602081019050613555565b8381111561357f576000848401525b50505050565b6000601f19601f8301169050919050565b61359f8161348f565b81146135aa57600080fd5b50565b6135b6816134a1565b81146135c157600080fd5b50565b6135cd816134ad565b81146135d857600080fd5b50565b6135e4816134b7565b81146135ef57600080fd5b50565b6135fb81613503565b811461360657600080fd5b5056fea365627a7a723158207adb4e038302505af5084839dbdce8f774cc0ff83dc8269160af3e2d2c683f8d6c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80636352211e116100de578063b88d4fde11610097578063d3fc986411610071578063d3fc986414610446578063d547cfb714610476578063e985e9c514610494578063f2fde38b146104c457610173565b8063b88d4fde146103f0578063c4ae31681461040c578063c87b56dd1461041657610173565b80636352211e1461031c57806370a082311461034c5780638da5cb5b1461037c5780638ee41a091461039a57806395d89b41146103b6578063a22cb465146103d457610173565b806327dc297e1161013057806327dc297e1461024c5780632f745c591461026857806338bbfa501461029857806342842e0e146102b45780634f6ccce7146102d0578063589945881461030057610173565b806301ffc9a71461017857806306fdde03146101a8578063081812fc146101c6578063095ea7b3146101f657806318160ddd1461021257806323b872dd14610230575b600080fd5b610192600480360361018d9190810190612b8d565b6104e0565b60405161019f9190613191565b60405180910390f35b6101b0610548565b6040516101bd91906131ac565b60405180910390f35b6101e060048036036101db9190810190612bdf565b6105ea565b6040516101ed919061312a565b60405180910390f35b610210600480360361020b91908101906129ee565b610627565b005b61021a6107d9565b6040516102279190613319565b60405180910390f35b61024a60048036036102459190810190612880565b6107e6565b005b61026660048036036102619190810190612aba565b610809565b005b610282600480360361027d91908101906129ee565b61084c565b60405161028f9190613319565b60405180910390f35b6102b260048036036102ad9190810190612b0e565b6108bf565b005b6102ce60048036036102c99190810190612880565b6108c4565b005b6102ea60048036036102e59190810190612bdf565b6108e4565b6040516102f79190613319565b60405180910390f35b61031a60048036036103159190810190612bdf565b610918565b005b61033660048036036103319190810190612bdf565b610aa6565b604051610343919061312a565b60405180910390f35b6103666004803603610361919081019061281b565b610ae3565b6040516103739190613319565b60405180910390f35b610384610b33565b604051610391919061312a565b60405180910390f35b6103b460048036036103af9190810190612986565b610b5c565b005b6103be610eb8565b6040516103cb91906131ac565b60405180910390f35b6103ee60048036036103e9919081019061294a565b610f5a565b005b61040a600480360361040591908101906128cf565b611090565b005b6104146110b6565b005b610430600480360361042b9190810190612bdf565b611171565b60405161043d91906131ac565b60405180910390f35b610460600480360361045b9190810190612a2a565b611238565b60405161046d9190613191565b60405180910390f35b61047e6112e8565b60405161048b91906131ac565b60405180910390f35b6104ae60048036036104a99190810190612844565b61138a565b6040516104bb9190613191565b60405180910390f35b6104de60048036036104d9919081019061281b565b61141e565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061063282610aa6565b90506002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cd9061320e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061071e575061071d61071783610aa6565b3361138a565b5b61072757600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b6107f033826115ba565b6107f957600080fd5b61080483838361164f565b505050565b610848828260006040519080825280601f01601f1916602001820160405280156108425781602001600182028038833980820191505090505b506108bf565b5050565b600061085783610ae3565b821061086257600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106108ac57fe5b9060005260206000200154905092915050565b505050565b6108df83838360405180602001604052806000815250611090565b505050565b60006108ee6107d9565b82106108f957600080fd5b6008828154811061090657fe5b90600052602060002001549050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099e906131ce565b60405180910390fd5b601460405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050503373ffffffffffffffffffffffffffffffffffffffff16817f01294b83361f7715b695189a469e96a6302a388f977ab3227ae6dbf84206e2836000604051610a9b9190613191565b60405180910390a350565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b2c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611673565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f48d7729826000015183602001516040518363ffffffff1660e01b8152600401610bc19291906132ee565b60206040518083038186803b158015610bd957600080fd5b505afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c119190810190612a91565b610c50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c479061324e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16601560008360200151600060018110610c7d57fe5b6020020151815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d01906132ce565b60405180910390fd5b60008090505b601480549050811015610e77578160200151600060018110610d2e57fe5b602002015160148281548110610d4057fe5b906000526020600020906002020160000154148015610d75575060008260200151600060018110610d6d57fe5b602002015114155b15610e6a57600060148281548110610d8957fe5b9060005260206000209060020201905060148281548110610da657fe5b9060005260206000209060020201601560008560200151600060018110610dc957fe5b60200201518152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610e6285610e5c6107d9565b86611238565b505050610eb3565b8080600101915050610d10565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaa9061326e565b60405180910390fd5b505050565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f505780601f10610f2557610100808354040283529160200191610f50565b820191906000526020600020905b815481529060010190602001808311610f3357829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f9357600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110849190613191565b60405180910390a35050565b61109b8484846107e6565b6110a784848484611681565b6110b057600080fd5b50505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611145576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113c906131ce565b60405180910390fd5b600060149054906101000a900460ff1615600060146101000a81548160ff021916908315150217905550565b606061117c82611798565b61118557600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561122c5780601f106112015761010080835404028352916020019161122c565b820191906000526020600020905b81548152906001019060200180831161120f57829003601f168201915b50505050509050919050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c0906131ce565b60405180910390fd5b6112d3848461180a565b6112dd838361182b565b600190509392505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113805780601f1061135557610100808354040283529160200191611380565b820191906000526020600020905b81548152906001019060200180831161136357829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a4906131ce565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561151d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115149061328e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806115c683610aa6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061163557508373ffffffffffffffffffffffffffffffffffffffff1661161d846105ea565b73ffffffffffffffffffffffffffffffffffffffff16145b806116465750611645818561138a565b5b91505092915050565b61165a83838361190c565b6116648382611b85565b61166e8282611d23565b505050565b600081600001549050919050565b60006116a28473ffffffffffffffffffffffffffffffffffffffff16611dea565b6116af5760019050611790565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016116f09493929190613145565b602060405180830381600087803b15801561170a57600080fd5b505af115801561171e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117429190810190612bb6565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6118148282611e35565b61181e8282611d23565b61182781611fb0565b5050565b61183482611798565b61183d57600080fd5b6118e160118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118d65780601f106118ab576101008083540402835291602001916118d6565b820191906000526020600020905b8154815290600101906020018083116118b957829003601f168201915b505050505082611ffc565b6012600084815260200190815260200160002090805190602001906119079291906123e0565b505050565b61191581610aa6565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611982576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119799061322e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e9906132ae565b60405180910390fd5b60006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a8c600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612040565b611ad3600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612063565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611bdd6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061207990919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611cca576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611c4a57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611ca257fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611d1c9190612460565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611e2c57506000801b8214155b92505050919050565b611e3e81611798565b158015611e785750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b611eb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eae906131ee565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f50600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612063565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606061203883836040518060200160405280600081525060405180602001604052806000815250604051806020016040528060008152506120c3565b905092915050565b6120586001826000015461207990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b60006120bb83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612385565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f19166020018201604052801561211f5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156121a45788818151811061214b57fe5b602001015160f81c60f81b83838060010194508151811061216857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612136565b600090505b8751811015612217578781815181106121be57fe5b602001015160f81c60f81b8383806001019450815181106121db57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121a9565b600090505b865181101561228a5786818151811061223157fe5b602001015160f81c60f81b83838060010194508151811061224e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061221c565b600090505b85518110156122fd578581815181106122a457fe5b602001015160f81c60f81b8383806001019450815181106122c157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061228f565b600090505b84518110156123705784818151811061231757fe5b602001015160f81c60f81b83838060010194508151811061233457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612302565b82995050505050505050505095945050505050565b60008383111582906123cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123c491906131ac565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061242157805160ff191683800117855561244f565b8280016001018555821561244f579182015b8281111561244e578251825591602001919060010190612433565b5b50905061245c919061248c565b5090565b81548183558181111561248757818360005260206000209182019101612486919061248c565b5b505050565b6124ae91905b808211156124aa576000816000905550600101612492565b5090565b90565b6000813590506124c081613596565b92915050565b600082601f8301126124d757600080fd5b60016124ea6124e582613361565b613334565b9150818385602084028201111561250057600080fd5b60005b8381101561253057816125168882612806565b845260208401935060208301925050600181019050612503565b5050505092915050565b600082601f83011261254b57600080fd5b600261255e61255982613383565b613334565b9150818385602084028201111561257457600080fd5b60005b838110156125a4578161258a8882612806565b845260208401935060208301925050600181019050612577565b5050505092915050565b6000813590506125bd816135ad565b92915050565b6000815190506125d2816135ad565b92915050565b6000813590506125e7816135c4565b92915050565b6000813590506125fc816135db565b92915050565b600081519050612611816135db565b92915050565b600082601f83011261262857600080fd5b813561263b612636826133a5565b613334565b9150808252602083016020830185838301111561265757600080fd5b612662838284613543565b50505092915050565b600082601f83011261267c57600080fd5b813561268f61268a826133d1565b613334565b915080825260208301602083018583830111156126ab57600080fd5b6126b6838284613543565b50505092915050565b600061012082840312156126d257600080fd5b6126dc6040613334565b905060006126ec848285016127a5565b600083015250610100612701848285016124c6565b60208301525092915050565b60006040828403121561271f57600080fd5b6127296040613334565b9050600061273984828501612806565b600083015250602061274d84828501612806565b60208301525092915050565b60006080828403121561276b57600080fd5b6127756040613334565b905060006127858482850161253a565b60008301525060406127998482850161253a565b60208301525092915050565b600061010082840312156127b857600080fd5b6127c26060613334565b905060006127d28482850161270d565b60008301525060406127e684828501612759565b60208301525060c06127fa8482850161270d565b60408301525092915050565b600081359050612815816135f2565b92915050565b60006020828403121561282d57600080fd5b600061283b848285016124b1565b91505092915050565b6000806040838503121561285757600080fd5b6000612865858286016124b1565b9250506020612876858286016124b1565b9150509250929050565b60008060006060848603121561289557600080fd5b60006128a3868287016124b1565b93505060206128b4868287016124b1565b92505060406128c586828701612806565b9150509250925092565b600080600080608085870312156128e557600080fd5b60006128f3878288016124b1565b9450506020612904878288016124b1565b935050604061291587828801612806565b925050606085013567ffffffffffffffff81111561293257600080fd5b61293e87828801612617565b91505092959194509250565b6000806040838503121561295d57600080fd5b600061296b858286016124b1565b925050602061297c858286016125ae565b9150509250929050565b6000806000610160848603121561299c57600080fd5b60006129aa868287016124b1565b935050602084013567ffffffffffffffff8111156129c757600080fd5b6129d38682870161266b565b92505060406129e4868287016126bf565b9150509250925092565b60008060408385031215612a0157600080fd5b6000612a0f858286016124b1565b9250506020612a2085828601612806565b9150509250929050565b600080600060608486031215612a3f57600080fd5b6000612a4d868287016124b1565b9350506020612a5e86828701612806565b925050604084013567ffffffffffffffff811115612a7b57600080fd5b612a878682870161266b565b9150509250925092565b600060208284031215612aa357600080fd5b6000612ab1848285016125c3565b91505092915050565b60008060408385031215612acd57600080fd5b6000612adb858286016125d8565b925050602083013567ffffffffffffffff811115612af857600080fd5b612b048582860161266b565b9150509250929050565b600080600060608486031215612b2357600080fd5b6000612b31868287016125d8565b935050602084013567ffffffffffffffff811115612b4e57600080fd5b612b5a8682870161266b565b925050604084013567ffffffffffffffff811115612b7757600080fd5b612b8386828701612617565b9150509250925092565b600060208284031215612b9f57600080fd5b6000612bad848285016125ed565b91505092915050565b600060208284031215612bc857600080fd5b6000612bd684828501612602565b91505092915050565b600060208284031215612bf157600080fd5b6000612bff84828501612806565b91505092915050565b6000612c14838361310c565b60208301905092915050565b612c298161350d565b82525050565b612c388161348f565b82525050565b612c4781613411565b612c518184613457565b9250612c5c826133fd565b8060005b83811015612c8d578151612c748782612c08565b9650612c7f8361343d565b925050600181019050612c60565b505050505050565b612c9e8161341c565b612ca88184613462565b9250612cb382613407565b8060005b83811015612ce4578151612ccb8782612c08565b9650612cd68361344a565b925050600181019050612cb7565b505050505050565b612cf5816134a1565b82525050565b6000612d0682613427565b612d10818561346d565b9350612d20818560208601613552565b612d2981613585565b840191505092915050565b6000612d3f82613432565b612d49818561347e565b9350612d59818560208601613552565b612d6281613585565b840191505092915050565b6000612d7a601f8361347e565b91507f6e65656473206265696e672063616c6c656420627920746865206f776e6572006000830152602082019050919050565b6000612dba60338361347e565b91507f5468697320746f6b656e20616c7265616479206d696e746564206f722074686560008301527f206164647265737320697320696e76616c6964000000000000000000000000006020830152604082019050919050565b6000612e2060398361347e565b91507f74686520676976656e20616464726573732073686f756c6420746f206e6f742060008301527f626520746865206f776e6572206f662074686520746f6b656e000000000000006020830152604082019050919050565b6000612e86602c8361347e565b91507f66726f6d20706172616d65746572206973206e6f7420746865206f776e65722060008301527f6f662074686520746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612eec60128361347e565b91507f57726f6e6720766572696669636174696f6e00000000000000000000000000006000830152602082019050919050565b6000612f2c601b8361347e565b91507f5468697320736f6c7574696f6e20646f65736e277420657869737400000000006000830152602082019050919050565b6000612f6c60308361347e565b91507f54686520706172616d657465722068617665206e6f7420706f696e7420746f2060008301527f746865207a65726f2061646472657373000000000000000000000000000000006020830152604082019050919050565b6000612fd2601e8361347e565b91507f746f20706172616d61746572206e6565647320746f2062652076616c696400006000830152602082019050919050565b600061301260238361347e565b91507f5468697320736f6c7574696f6e2068617320616c7265616479206265656e207560008301527f73656400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b604082016000820151613081600085018261310c565b506020820151613094602085018261310c565b50505050565b6080820160008201516130b06000850182612c95565b5060208201516130c36040850182612c95565b50505050565b610100820160008201516130e0600085018261306b565b5060208201516130f3604085018261309a565b50604082015161310660c085018261306b565b50505050565b61311581613503565b82525050565b61312481613503565b82525050565b600060208201905061313f6000830184612c2f565b92915050565b600060808201905061315a6000830187612c20565b6131676020830186612c2f565b613174604083018561311b565b81810360608301526131868184612cfb565b905095945050505050565b60006020820190506131a66000830184612cec565b92915050565b600060208201905081810360008301526131c68184612d34565b905092915050565b600060208201905081810360008301526131e781612d6d565b9050919050565b6000602082019050818103600083015261320781612dad565b9050919050565b6000602082019050818103600083015261322781612e13565b9050919050565b6000602082019050818103600083015261324781612e79565b9050919050565b6000602082019050818103600083015261326781612edf565b9050919050565b6000602082019050818103600083015261328781612f1f565b9050919050565b600060208201905081810360008301526132a781612f5f565b9050919050565b600060208201905081810360008301526132c781612fc5565b9050919050565b600060208201905081810360008301526132e781613005565b9050919050565b60006101208201905061330460008301856130c9565b613312610100830184612c3e565b9392505050565b600060208201905061332e600083018461311b565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561335757600080fd5b8060405250919050565b600067ffffffffffffffff82111561337857600080fd5b602082029050919050565b600067ffffffffffffffff82111561339a57600080fd5b602082029050919050565b600067ffffffffffffffff8211156133bc57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156133e857600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060019050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061349a826134e3565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006135188261351f565b9050919050565b600061352a82613531565b9050919050565b600061353c826134e3565b9050919050565b82818337600083830152505050565b60005b83811015613570578082015181840152602081019050613555565b8381111561357f576000848401525b50505050565b6000601f19601f8301169050919050565b61359f8161348f565b81146135aa57600080fd5b50565b6135b6816134a1565b81146135c157600080fd5b50565b6135cd816134ad565b81146135d857600080fd5b50565b6135e4816134b7565b81146135ef57600080fd5b50565b6135fb81613503565b811461360657600080fd5b5056fea365627a7a723158207adb4e038302505af5084839dbdce8f774cc0ff83dc8269160af3e2d2c683f8d6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "377:2156:7:-;;;553:55;8:9:-1;5:2;;;30:1;27;20:12;5:2;553:55:7;592:4;;;;;;;;;;;;;;;;;598:6;;;;;;;;;;;;;;;;;23024:4:4;23030:6;23038:3;;;;;;;;;;;;;;;;;689:10;680:6;;:19;;;;;;;;;;;;;;;;;;2093:5;2083:7;;:15;;;;;;;;;;;;;;;;;;3083:40;2681:10;3102:20;;3083:18;;;:40;;:::i;:::-;5336;5211:10;5355:20;;5336:18;;;:40;;:::i;:::-;13296:51;12902:10;13315:31;;13296:18;;;:51;;:::i;:::-;20862:4;20854:5;:12;;;;;;;;;;;;:::i;:::-;;20886:6;20876:7;:16;;;;;;;;;;;;:::i;:::-;;20918:12;20902:13;:28;;;;;;;;;;;;:::i;:::-;;20941:49;20495:10;20960:29;;20941:18;;;:49;;:::i;:::-;20684:313;;;22932:117;;377:2156:7;;3461:158:4;3551:10;3536:25;;:11;:25;;;;;3528:34;;;;;;3608:4;3572:20;:33;3593:11;3572:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3461:158;:::o;377:2156:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "377:2156:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;377:2156:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3221:161:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;21084:83;;;:::i;:::-;;;;;;;;;;;;;;;;6644:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5919:719;;;;;;;;;;;;;;;;:::i;:::-;;14089:94;;;:::i;:::-;;;;;;;;;;;;;;;;7816:210;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:6;;;;;;;;;;;;;;;;:::i;:::-;;13727:210:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:6;;;;;;;;;;;;;;;;:::i;:::-;;8032:162:4;;;;;;;;;;;;;;;;:::i;:::-;;14520:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1224:167:7;;;;;;;;;;;;;;;;:::i;:::-;;5680:162:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5389:285;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;467:77;;;:::i;:::-;;;;;;;;;;;;;;;;1639:892:7;;;;;;;;;;;;;;;;:::i;:::-;;21173:87:4;;;:::i;:::-;;;;;;;;;;;;;;;;7103:213;;;;;;;;;;;;;;;;:::i;:::-;;8200:249;;;;;;;;;;;;;;;;:::i;:::-;;1887:75;;;:::i;:::-;;21371:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;23055:225;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;21266:99;;;:::i;:::-;;;;;;;;;;;;;;;;7637:173;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1191:418;;;;;;;;;;;;;;;;:::i;:::-;;3221:161;3315:4;3342:20;:33;3363:11;3342:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:40;;3221:161;;;:::o;21084:83::-;21123:13;21155:5;21148:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21084:83;:::o;6644:167::-;6703:7;6780:15;:24;6796:7;6780:24;;;;;;;;;;;;;;;;;;;;;6773:31;;6644:167;;;:::o;5919:719::-;5982:13;5998:16;6006:7;5998;:16::i;:::-;5982:32;;6128:11;:20;6140:7;6128:20;;;;;;;;;;;;;;;;;;;;;6122:26;;:2;:26;;;;6101:130;;;;;;;;;;;;;;;;;;;;;;6380:5;6366:19;;:10;:19;;;:85;;;;6405:46;6422:16;6430:7;6422;:16::i;:::-;6440:10;6405:16;:46::i;:::-;6366:85;6345:116;;;;;;6550:2;6523:15;:24;6539:7;6523:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6623:7;6619:2;6603:28;;6612:5;6603:28;;;;;;;;;;;;5919:719;;;:::o;14089:94::-;14133:7;14159:10;:17;;;;14152:24;;14089:94;:::o;7816:210::-;7936:39;7955:10;7967:7;7936:18;:39::i;:::-;7928:48;;;;;;7987:32;8001:4;8007:2;8011:7;7987:13;:32::i;:::-;7816:210;;;:::o;14801:122:6:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:6;;;;14876:10;:40::i;:::-;14801:122;;:::o;13727:210:4:-;13831:7;13870:16;13880:5;13870:9;:16::i;:::-;13862:5;:24;13854:33;;;;;;13904:12;:19;13917:5;13904:19;;;;;;;;;;;;;;;13924:5;13904:26;;;;;;;;;;;;;;;;13897:33;;13727:210;;;;:::o;14929:166:6:-;;;;:::o;8032:162:4:-;8148:39;8165:4;8171:2;8175:7;8148:39;;;;;;;;;;;;:16;:39::i;:::-;8032:162;;;:::o;14520:148::-;14578:7;14613:13;:11;:13::i;:::-;14605:5;:21;14597:30;;;;;;14644:10;14655:5;14644:17;;;;;;;;;;;;;;;;14637:24;;14520:148;;;:::o;1224:167:7:-;862:10:4;852:20;;:6;;;;;;;;;;;:20;;;844:64;;;;;;;;;;;;;;;;;;;;;;1287:9:7;1302:27;;;;;;;;1311:5;1302:27;;;;1318:10;1302:27;;;;;1287:43;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1287:43:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:10;1345:39;;1359:5;1345:39;1378:5;1345:39;;;;;;;;;;;;;;;1224:167;:::o;5680:162:4:-;5735:7;5815:11;:20;5827:7;5815:20;;;;;;;;;;;;;;;;;;;;;5808:27;;5680:162;;;:::o;5389:285::-;5444:7;5633:34;:17;:24;5651:5;5633:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5626:41;;5389:285;;;:::o;467:77::-;505:7;531:6;;;;;;;;;;;524:13;;467:77;:::o;1639:892:7:-;1781:8;;;;;;;;;;;:17;;;1799:7;:13;;;1814:7;:13;;;1781:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1781:47:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1781:47:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1781:47:7;;;;;;;;;1760:112;;;;;;;;;;;;;;;;;;;;;;2021:1;1977:46;;:9;:27;1987:7;:13;;;2001:1;1987:16;;;;;;;;;;;1977:27;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;1956:128;;;;;;;;;;;;;;;;;;;;;;2099:9;2111:1;2099:13;;2094:384;2118:9;:16;;;;2114:1;:20;2094:384;;;2198:7;:13;;;2212:1;2198:16;;;;;;;;;;;2176:9;2186:1;2176:12;;;;;;;;;;;;;;;;;;:18;;;:38;:63;;;;;2238:1;2218:7;:13;;;2232:1;2218:16;;;;;;;;;;;:21;;2176:63;2155:313;;;2272:25;2300:9;2310:1;2300:12;;;;;;;;;;;;;;;;;;2272:40;;2360:9;2370:1;2360:12;;;;;;;;;;;;;;;;;;2330:9;:27;2340:7;:13;;;2354:1;2340:16;;;;;;;;;;;2330:27;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2390:39;2401:2;2405:13;:11;:13::i;:::-;2420:8;2390:10;:39::i;:::-;;2447:7;;;;2155:313;2136:3;;;;;;;2094:384;;;;2487:37;;;;;;;;;;;;;;;;;;;1639:892;;;;:::o;21173:87:4:-;21214:13;21246:7;21239:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21173:87;:::o;7103:213::-;7188:10;7182:16;;:2;:16;;;;7174:25;;;;;;7246:8;7209:18;:30;7228:10;7209:30;;;;;;;;;;;;;;;:34;7240:2;7209:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7296:2;7269:40;;7284:10;7269:40;;;7300:8;7269:40;;;;;;;;;;;;;;;7103:213;;:::o;8200:249::-;8344:31;8357:4;8363:2;8367:7;8344:12;:31::i;:::-;8393:48;8416:4;8422:2;8426:7;8435:5;8393:22;:48::i;:::-;8385:57;;;;;;8200:249;;;;:::o;1887:75::-;862:10;852:20;;:6;;;;;;;;;;;:20;;;844:64;;;;;;;;;;;;;;;;;;;;;;1948:7;;;;;;;;;;;1947:8;1937:7;;:18;;;;;;;;;;;;;;;;;;1887:75::o;21371:151::-;21429:13;21462:16;21470:7;21462;:16::i;:::-;21454:25;;;;;;21496:10;:19;21507:7;21496:19;;;;;;;;;;;21489:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21371:151;;;:::o;23055:225::-;23178:4;862:10;852:20;;:6;;;;;;;;;;;:20;;;844:64;;;;;;;;;;;;;;;;;;;;;;23194:18;23200:2;23204:7;23194:5;:18::i;:::-;23222:30;23234:7;23243:8;23222:11;:30::i;:::-;23269:4;23262:11;;23055:225;;;;;:::o;21266:99::-;21313:13;21345;21338:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21266:99;:::o;7637:173::-;7741:4;7768:18;:25;7787:5;7768:25;;;;;;;;;;;;;;;:35;7794:8;7768:35;;;;;;;;;;;;;;;;;;;;;;;;;7761:42;;7637:173;;;;:::o;1191:418::-;862:10;852:20;;:6;;;;;;;;;;;:20;;;844:64;;;;;;;;;;;;;;;;;;;;;;1442:1;1422:22;;:8;:22;;;;1401:117;;;;;;;;;;;;;;;;;;;;;;1566:8;1533:42;;1554:10;1533:42;;;;;;;;;;;;1594:8;1585:6;;:17;;;;;;;;;;;;;;;;;;1191:418;:::o;9155:298::-;9264:4;9284:13;9300:16;9308:7;9300;:16::i;:::-;9284:32;;9345:5;9334:16;;:7;:16;;;:63;;;;9390:7;9366:31;;:20;9378:7;9366:11;:20::i;:::-;:31;;;9334:63;:111;;;;9413:32;9430:5;9437:7;9413:16;:32::i;:::-;9334:111;9326:120;;;9155:298;;;;:::o;15043:269::-;15158:38;15178:4;15184:2;15188:7;15158:19;:38::i;:::-;15207:47;15240:4;15246:7;15207:32;:47::i;:::-;15265:40;15293:2;15297:7;15265:27;:40::i;:::-;15043:269;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11663:431:4:-;11814:4;11835:15;:2;:13;;;:15::i;:::-;11830:58;;11873:4;11866:11;;;;11830:58;11898:13;11930:2;11914:36;;;11964:10;11988:4;12006:7;12027:5;11914:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11914:128:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11914:128:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11914:128:4;;;;;;;;;11898:144;;4349:10;12070:16;;12060:26;;;:6;:26;;;;12052:35;;;11663:431;;;;;;;:::o;8643:152::-;8700:4;8716:13;8732:11;:20;8744:7;8732:20;;;;;;;;;;;;;;;;;;;;;8716:36;;8786:1;8769:19;;:5;:19;;;;8762:26;;;8643:152;;;:::o;15567:196::-;15630:24;15642:2;15646:7;15630:11;:24::i;:::-;15665:40;15693:2;15697:7;15665:27;:40::i;:::-;15716;15748:7;15716:31;:40::i;:::-;15567:196;;:::o;21994:169::-;22078:16;22086:7;22078;:16::i;:::-;22070:25;;;;;;22127:29;22137:13;22127:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22152:3;22127:9;:29::i;:::-;22105:10;:19;22116:7;22105:19;;;;;;;;;;;:51;;;;;;;;;;;;:::i;:::-;;21994:169;;:::o;10337:798::-;10551:16;10559:7;10551;:16::i;:::-;10543:24;;:4;:24;;;10522:115;;;;;;;;;;;;;;;;;;;;;;10737:1;10723:16;;:2;:16;;;;10715:59;;;;;;;;;;;;;;;;;;;;;;10851:1;10816:15;:24;10832:7;10816:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;10937:35;:17;:23;10955:4;10937:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10982:33;:17;:21;11000:2;10982:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11048:2;11025:11;:20;11037:7;11025:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11120:7;11116:2;11101:27;;11110:4;11101:27;;;;;;;;;;;;10337:798;;;:::o;17567:1140::-;17841:22;17866:32;17896:1;17866:12;:18;17879:4;17866:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17841:57;;17908:18;17929:17;:26;17947:7;17929:26;;;;;;;;;;;;17908:47;;18073:14;18059:10;:28;18055:323;;18103:19;18125:12;:18;18138:4;18125:18;;;;;;;;;;;;;;;18144:14;18125:34;;;;;;;;;;;;;;;;18103:56;;18207:11;18174:12;:18;18187:4;18174:18;;;;;;;;;;;;;;;18193:10;18174:30;;;;;;;;;;;;;;;:44;;;;18323:10;18290:17;:30;18308:11;18290:30;;;;;;;;;;;:43;;;;18055:323;;18464:12;:18;18477:4;18464:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17567:1140;;;;:::o;16413:183::-;16526:12;:16;16539:2;16526:16;;;;;;;;;;;;;;;:23;;;;16497:17;:26;16515:7;16497:26;;;;;;;;;;;:52;;;;16559:12;:16;16572:2;16559:16;;;;;;;;;;;;;;;16581:7;16559:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16559:30:4;;;;;;;;;;;;;;;;;;;;;;16413:183;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;9610:528:4:-;9778:16;9786:7;9778;:16::i;:::-;9777:17;:37;;;;;9812:1;9798:16;;:2;:16;;;;9777:37;9756:135;;;;;;;;;;;;;;;;;;;;;;10002:2;9979:11;:20;9991:7;9979:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10014:33;:17;:21;10032:2;10014:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10123:7;10119:2;10098:33;;10115:1;10098:33;;;;;;;;;;;;9610:528;;:::o;16791:161::-;16894:10;:17;;;;16867:15;:24;16883:7;16867:24;;;;;;;;;;;:44;;;;16921:10;16937:7;16921:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16921:24:4;;;;;;;;;;;;;;;;;;;;;;16791:161;:::o;39712:166:6:-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:6:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:6;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;377:2156:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;161:608;;272:3;265:4;257:6;253:17;249:27;239:2;;290:1;287;280:12;239:2;314:4;333:74;348:58;399:6;348:58;;;333:74;;;324:83;;424:5;483:6;530:3;522:4;514:6;510:17;505:3;501:27;498:36;495:2;;;547:1;544;537:12;495:2;572:1;557:206;582:6;579:1;576:13;557:206;;;640:3;662:37;695:3;683:10;662:37;;;657:3;650:50;723:4;718:3;714:14;707:21;;751:4;746:3;742:14;735:21;;614:149;604:1;601;597:9;592:14;;557:206;;;561:14;232:537;;;;;;;;796:608;;907:3;900:4;892:6;888:17;884:27;874:2;;925:1;922;915:12;874:2;949:4;968:74;983:58;1034:6;983:58;;;968:74;;;959:83;;1059:5;1118:6;1165:3;1157:4;1149:6;1145:17;1140:3;1136:27;1133:36;1130:2;;;1182:1;1179;1172:12;1130:2;1207:1;1192:206;1217:6;1214:1;1211:13;1192:206;;;1275:3;1297:37;1330:3;1318:10;1297:37;;;1292:3;1285:50;1358:4;1353:3;1349:14;1342:21;;1386:4;1381:3;1377:14;1370:21;;1249:149;1239:1;1236;1232:9;1227:14;;1192:206;;;1196:14;867:537;;;;;;;;1412:124;;1489:6;1476:20;1467:29;;1501:30;1525:5;1501:30;;;1461:75;;;;;1543:128;;1624:6;1618:13;1609:22;;1636:30;1660:5;1636:30;;;1603:68;;;;;1678:130;;1758:6;1745:20;1736:29;;1770:33;1797:5;1770:33;;;1730:78;;;;;1815:128;;1894:6;1881:20;1872:29;;1906:32;1932:5;1906:32;;;1866:77;;;;;1950:132;;2033:6;2027:13;2018:22;;2045:32;2071:5;2045:32;;;2012:70;;;;;2090:440;;2191:3;2184:4;2176:6;2172:17;2168:27;2158:2;;2209:1;2206;2199:12;2158:2;2246:6;2233:20;2268:64;2283:48;2324:6;2283:48;;;2268:64;;;2259:73;;2352:6;2345:5;2338:21;2388:4;2380:6;2376:17;2421:4;2414:5;2410:16;2456:3;2447:6;2442:3;2438:16;2435:25;2432:2;;;2473:1;2470;2463:12;2432:2;2483:41;2517:6;2512:3;2507;2483:41;;;2151:379;;;;;;;;2539:442;;2641:3;2634:4;2626:6;2622:17;2618:27;2608:2;;2659:1;2656;2649:12;2608:2;2696:6;2683:20;2718:65;2733:49;2775:6;2733:49;;;2718:65;;;2709:74;;2803:6;2796:5;2789:21;2839:4;2831:6;2827:17;2872:4;2865:5;2861:16;2907:3;2898:6;2893:3;2889:16;2886:25;2883:2;;;2924:1;2921;2914:12;2883:2;2934:41;2968:6;2963:3;2958;2934:41;;;2601:380;;;;;;;;3029:510;;3143:6;3131:9;3126:3;3122:19;3118:32;3115:2;;;3163:1;3160;3153:12;3115:2;3181:20;3196:4;3181:20;;;3172:29;;3252:1;3284:68;3348:3;3339:6;3328:9;3324:22;3284:68;;;3277:4;3270:5;3266:16;3259:94;3211:153;3415:3;3449:68;3513:3;3504:6;3493:9;3489:22;3449:68;;;3442:4;3435:5;3431:16;3424:94;3374:155;3109:430;;;;;3575:457;;3685:4;3673:9;3668:3;3664:19;3660:30;3657:2;;;3703:1;3700;3693:12;3657:2;3721:20;3736:4;3721:20;;;3712:29;;3788:1;3820:49;3865:3;3856:6;3845:9;3841:22;3820:49;;;3813:4;3806:5;3802:16;3795:75;3751:130;3928:2;3961:49;4006:3;3997:6;3986:9;3982:22;3961:49;;;3954:4;3947:5;3943:16;3936:75;3891:131;3651:381;;;;;4068:495;;4178:4;4166:9;4161:3;4157:19;4153:30;4150:2;;;4196:1;4193;4186:12;4150:2;4214:20;4229:4;4214:20;;;4205:29;;4281:1;4313:68;4377:3;4368:6;4357:9;4353:22;4313:68;;;4306:4;4299:5;4295:16;4288:94;4244:149;4440:2;4473:68;4537:3;4528:6;4517:9;4513:22;4473:68;;;4466:4;4459:5;4455:16;4448:94;4403:150;4144:419;;;;;4598:662;;4706:6;4694:9;4689:3;4685:19;4681:32;4678:2;;;4726:1;4723;4716:12;4678:2;4744:20;4759:4;4744:20;;;4735:29;;4811:1;4843:70;4909:3;4900:6;4889:9;4885:22;4843:70;;;4836:4;4829:5;4825:16;4818:96;4774:151;4972:2;5005:70;5071:3;5062:6;5051:9;5047:22;5005:70;;;4998:4;4991:5;4987:16;4980:96;4935:152;5134:3;5168:70;5234:3;5225:6;5214:9;5210:22;5168:70;;;5161:4;5154:5;5150:16;5143:96;5097:153;4672:588;;;;;5267:130;;5347:6;5334:20;5325:29;;5359:33;5386:5;5359:33;;;5319:78;;;;;5404:241;;5508:2;5496:9;5487:7;5483:23;5479:32;5476:2;;;5524:1;5521;5514:12;5476:2;5559:1;5576:53;5621:7;5612:6;5601:9;5597:22;5576:53;;;5566:63;;5538:97;5470:175;;;;;5652:366;;;5773:2;5761:9;5752:7;5748:23;5744:32;5741:2;;;5789:1;5786;5779:12;5741:2;5824:1;5841:53;5886:7;5877:6;5866:9;5862:22;5841:53;;;5831:63;;5803:97;5931:2;5949:53;5994:7;5985:6;5974:9;5970:22;5949:53;;;5939:63;;5910:98;5735:283;;;;;;6025:491;;;;6163:2;6151:9;6142:7;6138:23;6134:32;6131:2;;;6179:1;6176;6169:12;6131:2;6214:1;6231:53;6276:7;6267:6;6256:9;6252:22;6231:53;;;6221:63;;6193:97;6321:2;6339:53;6384:7;6375:6;6364:9;6360:22;6339:53;;;6329:63;;6300:98;6429:2;6447:53;6492:7;6483:6;6472:9;6468:22;6447:53;;;6437:63;;6408:98;6125:391;;;;;;6523:721;;;;;6687:3;6675:9;6666:7;6662:23;6658:33;6655:2;;;6704:1;6701;6694:12;6655:2;6739:1;6756:53;6801:7;6792:6;6781:9;6777:22;6756:53;;;6746:63;;6718:97;6846:2;6864:53;6909:7;6900:6;6889:9;6885:22;6864:53;;;6854:63;;6825:98;6954:2;6972:53;7017:7;7008:6;6997:9;6993:22;6972:53;;;6962:63;;6933:98;7090:2;7079:9;7075:18;7062:32;7114:18;7106:6;7103:30;7100:2;;;7146:1;7143;7136:12;7100:2;7166:62;7220:7;7211:6;7200:9;7196:22;7166:62;;;7156:72;;7041:193;6649:595;;;;;;;;7251:360;;;7369:2;7357:9;7348:7;7344:23;7340:32;7337:2;;;7385:1;7382;7375:12;7337:2;7420:1;7437:53;7482:7;7473:6;7462:9;7458:22;7437:53;;;7427:63;;7399:97;7527:2;7545:50;7587:7;7578:6;7567:9;7563:22;7545:50;;;7535:60;;7506:95;7331:280;;;;;;7618:648;;;;7791:3;7779:9;7770:7;7766:23;7762:33;7759:2;;;7808:1;7805;7798:12;7759:2;7843:1;7860:53;7905:7;7896:6;7885:9;7881:22;7860:53;;;7850:63;;7822:97;7978:2;7967:9;7963:18;7950:32;8002:18;7994:6;7991:30;7988:2;;;8034:1;8031;8024:12;7988:2;8054:63;8109:7;8100:6;8089:9;8085:22;8054:63;;;8044:73;;7929:194;8154:2;8172:78;8242:7;8233:6;8222:9;8218:22;8172:78;;;8162:88;;8133:123;7753:513;;;;;;8273:366;;;8394:2;8382:9;8373:7;8369:23;8365:32;8362:2;;;8410:1;8407;8400:12;8362:2;8445:1;8462:53;8507:7;8498:6;8487:9;8483:22;8462:53;;;8452:63;;8424:97;8552:2;8570:53;8615:7;8606:6;8595:9;8591:22;8570:53;;;8560:63;;8531:98;8356:283;;;;;;8646:597;;;;8794:2;8782:9;8773:7;8769:23;8765:32;8762:2;;;8810:1;8807;8800:12;8762:2;8845:1;8862:53;8907:7;8898:6;8887:9;8883:22;8862:53;;;8852:63;;8824:97;8952:2;8970:53;9015:7;9006:6;8995:9;8991:22;8970:53;;;8960:63;;8931:98;9088:2;9077:9;9073:18;9060:32;9112:18;9104:6;9101:30;9098:2;;;9144:1;9141;9134:12;9098:2;9164:63;9219:7;9210:6;9199:9;9195:22;9164:63;;;9154:73;;9039:194;8756:487;;;;;;9250:257;;9362:2;9350:9;9341:7;9337:23;9333:32;9330:2;;;9378:1;9375;9368:12;9330:2;9413:1;9430:61;9483:7;9474:6;9463:9;9459:22;9430:61;;;9420:71;;9392:105;9324:183;;;;;9514:472;;;9645:2;9633:9;9624:7;9620:23;9616:32;9613:2;;;9661:1;9658;9651:12;9613:2;9696:1;9713:53;9758:7;9749:6;9738:9;9734:22;9713:53;;;9703:63;;9675:97;9831:2;9820:9;9816:18;9803:32;9855:18;9847:6;9844:30;9841:2;;;9887:1;9884;9877:12;9841:2;9907:63;9962:7;9953:6;9942:9;9938:22;9907:63;;;9897:73;;9782:194;9607:379;;;;;;9993:701;;;;10150:2;10138:9;10129:7;10125:23;10121:32;10118:2;;;10166:1;10163;10156:12;10118:2;10201:1;10218:53;10263:7;10254:6;10243:9;10239:22;10218:53;;;10208:63;;10180:97;10336:2;10325:9;10321:18;10308:32;10360:18;10352:6;10349:30;10346:2;;;10392:1;10389;10382:12;10346:2;10412:63;10467:7;10458:6;10447:9;10443:22;10412:63;;;10402:73;;10287:194;10540:2;10529:9;10525:18;10512:32;10564:18;10556:6;10553:30;10550:2;;;10596:1;10593;10586:12;10550:2;10616:62;10670:7;10661:6;10650:9;10646:22;10616:62;;;10606:72;;10491:193;10112:582;;;;;;10701:239;;10804:2;10792:9;10783:7;10779:23;10775:32;10772:2;;;10820:1;10817;10810:12;10772:2;10855:1;10872:52;10916:7;10907:6;10896:9;10892:22;10872:52;;;10862:62;;10834:96;10766:174;;;;;10947:261;;11061:2;11049:9;11040:7;11036:23;11032:32;11029:2;;;11077:1;11074;11067:12;11029:2;11112:1;11129:63;11184:7;11175:6;11164:9;11160:22;11129:63;;;11119:73;;11091:107;11023:185;;;;;11215:241;;11319:2;11307:9;11298:7;11294:23;11290:32;11287:2;;;11335:1;11332;11325:12;11287:2;11370:1;11387:53;11432:7;11423:6;11412:9;11408:22;11387:53;;;11377:63;;11349:97;11281:175;;;;;11464:173;;11551:46;11593:3;11585:6;11551:46;;;11626:4;11621:3;11617:14;11603:28;;11544:93;;;;;11645:142;11736:45;11775:5;11736:45;;;11731:3;11724:58;11718:69;;;11794:113;11877:24;11895:5;11877:24;;;11872:3;11865:37;11859:48;;;11947:644;12076:48;12118:5;12076:48;;;12137:84;12214:6;12209:3;12137:84;;;12130:91;;12242:50;12286:5;12242:50;;;12312:7;12340:1;12325:254;12350:6;12347:1;12344:13;12325:254;;;12417:6;12411:13;12438:63;12497:3;12482:13;12438:63;;;12431:70;;12518:54;12565:6;12518:54;;;12508:64;;12382:197;12372:1;12369;12365:9;12360:14;;12325:254;;;12329:14;12055:536;;;;;;12632:624;12751:48;12793:5;12751:48;;;12812:74;12879:6;12874:3;12812:74;;;12805:81;;12907:50;12951:5;12907:50;;;12977:7;13005:1;12990:254;13015:6;13012:1;13009:13;12990:254;;;13082:6;13076:13;13103:63;13162:3;13147:13;13103:63;;;13096:70;;13183:54;13230:6;13183:54;;;13173:64;;13047:197;13037:1;13034;13030:9;13025:14;;12990:254;;;12994:14;12730:526;;;;;;13264:104;13341:21;13356:5;13341:21;;;13336:3;13329:34;13323:45;;;13375:343;;13485:38;13517:5;13485:38;;;13535:70;13598:6;13593:3;13535:70;;;13528:77;;13610:52;13655:6;13650:3;13643:4;13636:5;13632:16;13610:52;;;13683:29;13705:6;13683:29;;;13678:3;13674:39;13667:46;;13465:253;;;;;;13725:347;;13837:39;13870:5;13837:39;;;13888:71;13952:6;13947:3;13888:71;;;13881:78;;13964:52;14009:6;14004:3;13997:4;13990:5;13986:16;13964:52;;;14037:29;14059:6;14037:29;;;14032:3;14028:39;14021:46;;13817:255;;;;;;14080:331;;14240:67;14304:2;14299:3;14240:67;;;14233:74;;14340:33;14336:1;14331:3;14327:11;14320:54;14402:2;14397:3;14393:12;14386:19;;14226:185;;;;14420:388;;14580:67;14644:2;14639:3;14580:67;;;14573:74;;14680:34;14676:1;14671:3;14667:11;14660:55;14749:21;14744:2;14739:3;14735:12;14728:43;14799:2;14794:3;14790:12;14783:19;;14566:242;;;;14817:394;;14977:67;15041:2;15036:3;14977:67;;;14970:74;;15077:34;15073:1;15068:3;15064:11;15057:55;15146:27;15141:2;15136:3;15132:12;15125:49;15202:2;15197:3;15193:12;15186:19;;14963:248;;;;15220:381;;15380:67;15444:2;15439:3;15380:67;;;15373:74;;15480:34;15476:1;15471:3;15467:11;15460:55;15549:14;15544:2;15539:3;15535:12;15528:36;15592:2;15587:3;15583:12;15576:19;;15366:235;;;;15610:318;;15770:67;15834:2;15829:3;15770:67;;;15763:74;;15870:20;15866:1;15861:3;15857:11;15850:41;15919:2;15914:3;15910:12;15903:19;;15756:172;;;;15937:327;;16097:67;16161:2;16156:3;16097:67;;;16090:74;;16197:29;16193:1;16188:3;16184:11;16177:50;16255:2;16250:3;16246:12;16239:19;;16083:181;;;;16273:385;;16433:67;16497:2;16492:3;16433:67;;;16426:74;;16533:34;16529:1;16524:3;16520:11;16513:55;16602:18;16597:2;16592:3;16588:12;16581:40;16649:2;16644:3;16640:12;16633:19;;16419:239;;;;16667:330;;16827:67;16891:2;16886:3;16827:67;;;16820:74;;16927:32;16923:1;16918:3;16914:11;16907:53;16988:2;16983:3;16979:12;16972:19;;16813:184;;;;17006:372;;17166:67;17230:2;17225:3;17166:67;;;17159:74;;17266:34;17262:1;17257:3;17253:11;17246:55;17335:5;17330:2;17325:3;17321:12;17314:27;17369:2;17364:3;17360:12;17353:19;;17152:226;;;;17441:456;17570:4;17565:3;17561:14;17650:4;17643:5;17639:16;17633:23;17662:63;17719:4;17714:3;17710:14;17696:12;17662:63;;;17590:141;17801:4;17794:5;17790:16;17784:23;17813:63;17870:4;17865:3;17861:14;17847:12;17813:63;;;17741:141;17543:354;;;;17959:540;18088:4;18083:3;18079:14;18168:4;18161:5;18157:16;18151:23;18180:105;18279:4;18274:3;18270:14;18256:12;18180:105;;;18108:183;18361:4;18354:5;18350:16;18344:23;18373:105;18472:4;18467:3;18463:14;18449:12;18373:105;;;18301:183;18061:438;;;;18559:753;18694:6;18689:3;18685:16;18776:4;18769:5;18765:16;18759:23;18788:109;18891:4;18886:3;18882:14;18868:12;18788:109;;;18716:187;18973:4;18966:5;18962:16;18956:23;18985:109;19088:4;19083:3;19079:14;19065:12;18985:109;;;18913:187;19170:4;19163:5;19159:16;19153:23;19182:109;19285:4;19280:3;19276:14;19262:12;19182:109;;;19110:187;18667:645;;;;19319:103;19392:24;19410:5;19392:24;;;19387:3;19380:37;19374:48;;;19429:113;19512:24;19530:5;19512:24;;;19507:3;19500:37;19494:48;;;19549:213;;19667:2;19656:9;19652:18;19644:26;;19681:71;19749:1;19738:9;19734:17;19725:6;19681:71;;;19638:124;;;;;19769:647;;19997:3;19986:9;19982:19;19974:27;;20012:79;20088:1;20077:9;20073:17;20064:6;20012:79;;;20102:72;20170:2;20159:9;20155:18;20146:6;20102:72;;;20185;20253:2;20242:9;20238:18;20229:6;20185:72;;;20305:9;20299:4;20295:20;20290:2;20279:9;20275:18;20268:48;20330:76;20401:4;20392:6;20330:76;;;20322:84;;19968:448;;;;;;;;20423:201;;20535:2;20524:9;20520:18;20512:26;;20549:65;20611:1;20600:9;20596:17;20587:6;20549:65;;;20506:118;;;;;20631:301;;20769:2;20758:9;20754:18;20746:26;;20819:9;20813:4;20809:20;20805:1;20794:9;20790:17;20783:47;20844:78;20917:4;20908:6;20844:78;;;20836:86;;20740:192;;;;;20939:407;;21130:2;21119:9;21115:18;21107:26;;21180:9;21174:4;21170:20;21166:1;21155:9;21151:17;21144:47;21205:131;21331:4;21205:131;;;21197:139;;21101:245;;;;21353:407;;21544:2;21533:9;21529:18;21521:26;;21594:9;21588:4;21584:20;21580:1;21569:9;21565:17;21558:47;21619:131;21745:4;21619:131;;;21611:139;;21515:245;;;;21767:407;;21958:2;21947:9;21943:18;21935:26;;22008:9;22002:4;21998:20;21994:1;21983:9;21979:17;21972:47;22033:131;22159:4;22033:131;;;22025:139;;21929:245;;;;22181:407;;22372:2;22361:9;22357:18;22349:26;;22422:9;22416:4;22412:20;22408:1;22397:9;22393:17;22386:47;22447:131;22573:4;22447:131;;;22439:139;;22343:245;;;;22595:407;;22786:2;22775:9;22771:18;22763:26;;22836:9;22830:4;22826:20;22822:1;22811:9;22807:17;22800:47;22861:131;22987:4;22861:131;;;22853:139;;22757:245;;;;23009:407;;23200:2;23189:9;23185:18;23177:26;;23250:9;23244:4;23240:20;23236:1;23225:9;23221:17;23214:47;23275:131;23401:4;23275:131;;;23267:139;;23171:245;;;;23423:407;;23614:2;23603:9;23599:18;23591:26;;23664:9;23658:4;23654:20;23650:1;23639:9;23635:17;23628:47;23689:131;23815:4;23689:131;;;23681:139;;23585:245;;;;23837:407;;24028:2;24017:9;24013:18;24005:26;;24078:9;24072:4;24068:20;24064:1;24053:9;24049:17;24042:47;24103:131;24229:4;24103:131;;;24095:139;;23999:245;;;;24251:407;;24442:2;24431:9;24427:18;24419:26;;24492:9;24486:4;24482:20;24478:1;24467:9;24463:17;24456:47;24517:131;24643:4;24517:131;;;24509:139;;24413:245;;;;24665:494;;24895:3;24884:9;24880:19;24872:27;;24910:113;25020:1;25009:9;25005:17;24996:6;24910:113;;;25034:115;25144:3;25133:9;25129:19;25120:6;25034:115;;;24866:293;;;;;;25166:213;;25284:2;25273:9;25269:18;25261:26;;25298:71;25366:1;25355:9;25351:17;25342:6;25298:71;;;25255:124;;;;;25386:256;;25448:2;25442:9;25432:19;;25486:4;25478:6;25474:17;25585:6;25573:10;25570:22;25549:18;25537:10;25534:34;25531:62;25528:2;;;25606:1;25603;25596:12;25528:2;25626:10;25622:2;25615:22;25426:216;;;;;25649:240;;25802:18;25794:6;25791:30;25788:2;;;25834:1;25831;25824:12;25788:2;25869:4;25861:6;25857:17;25849:25;;25725:164;;;;25896:240;;26049:18;26041:6;26038:30;26035:2;;;26081:1;26078;26071:12;26035:2;26116:4;26108:6;26104:17;26096:25;;25972:164;;;;26143:321;;26286:18;26278:6;26275:30;26272:2;;;26318:1;26315;26308:12;26272:2;26385:4;26381:9;26374:4;26366:6;26362:17;26358:33;26350:41;;26449:4;26443;26439:15;26431:23;;26209:255;;;;26471:322;;26615:18;26607:6;26604:30;26601:2;;;26647:1;26644;26637:12;26601:2;26714:4;26710:9;26703:4;26695:6;26691:17;26687:33;26679:41;;26778:4;26772;26768:15;26760:23;;26538:255;;;;26800:93;;26880:3;26872:11;;26866:27;;;;26900:93;;26980:3;26972:11;;26966:27;;;;27000:104;;27090:4;27080:14;;27068:36;;;;27111:104;;27201:4;27191:14;;27179:36;;;;27222:121;;27315:5;27309:12;27299:22;;27280:63;;;;27350:122;;27444:5;27438:12;27428:22;;27409:63;;;;27479:102;;27571:4;27566:3;27562:14;27554:22;;27548:33;;;;27588:102;;27680:4;27675:3;27671:14;27663:22;;27657:33;;;;27698:140;;27829:3;27814:18;;27807:31;;;;;27847:130;;27968:3;27953:18;;27946:31;;;;;27986:162;;28100:6;28095:3;28088:19;28137:4;28132:3;28128:14;28113:29;;28081:67;;;;;28157:163;;28272:6;28267:3;28260:19;28309:4;28304:3;28300:14;28285:29;;28253:67;;;;;28328:91;;28390:24;28408:5;28390:24;;;28379:35;;28373:46;;;;28426:85;;28499:5;28492:13;28485:21;28474:32;;28468:43;;;;28518:72;;28580:5;28569:16;;28563:27;;;;28597:144;;28669:66;28662:5;28658:78;28647:89;;28641:100;;;;28748:121;;28821:42;28814:5;28810:54;28799:65;;28793:76;;;;28876:72;;28938:5;28927:16;;28921:27;;;;28955:129;;29042:37;29073:5;29042:37;;;29029:50;;29023:61;;;;29091:121;;29170:37;29201:5;29170:37;;;29157:50;;29151:61;;;;29219:108;;29298:24;29316:5;29298:24;;;29285:37;;29279:48;;;;29335:145;29416:6;29411:3;29406;29393:30;29472:1;29463:6;29458:3;29454:16;29447:27;29386:94;;;;29489:268;29554:1;29561:101;29575:6;29572:1;29569:13;29561:101;;;29651:1;29646:3;29642:11;29636:18;29632:1;29627:3;29623:11;29616:39;29597:2;29594:1;29590:10;29585:15;;29561:101;;;29677:6;29674:1;29671:13;29668:2;;;29742:1;29733:6;29728:3;29724:16;29717:27;29668:2;29538:219;;;;;29765:97;;29853:2;29849:7;29844:2;29837:5;29833:14;29829:28;29819:38;;29813:49;;;;29870:117;29939:24;29957:5;29939:24;;;29932:5;29929:35;29919:2;;29978:1;29975;29968:12;29919:2;29913:74;;29994:111;30060:21;30075:5;30060:21;;;30053:5;30050:32;30040:2;;30096:1;30093;30086:12;30040:2;30034:71;;30112:117;30181:24;30199:5;30181:24;;;30174:5;30171:35;30161:2;;30220:1;30217;30210:12;30161:2;30155:74;;30236:115;30304:23;30321:5;30304:23;;;30297:5;30294:34;30284:2;;30342:1;30339;30332:12;30284:2;30278:73;;30358:117;30427:24;30445:5;30427:24;;;30420:5;30417:35;30407:2;;30466:1;30463;30456:12;30407:2;30401:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./verifier.sol\";\nimport \"./ERC721Mintable.sol\";\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\ncontract renamedVerifier is Verifier {\n\n}\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token {\n    renamedVerifier verifier;\n    string constant name = \"Real Estate Marketplace\";\n    string constant symbol = \"REM\";\n\n    constructor() public CustomERC721Token(name, symbol) {}\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        uint256 index;\n        address addr;\n    }\n\n    // TODO define an array of the above struct\n    Solution[] private solutions;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(uint256 => Solution) private submitted;\n\n    // TODO Create an event to emit when a solution is added\n    event SolutionAdded(\n        uint256 indexed index,\n        address indexed addr,\n        bool submitted\n    );\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(uint256 index) public onlyOwner {\n        solutions.push(Solution(index, msg.sender));\n        emit SolutionAdded(index, msg.sender, false);\n    }\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    struct Checker {\n        renamedVerifier.Proof proof;\n        uint256[1] input;\n    }\n\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mint(\n        address to,\n        string memory tokenURI,\n        Checker memory checker\n    ) public {\n        require(\n            verifier.verifyTx(checker.proof, checker.input),\n            \"Wrong verification\"\n        );\n        //  - make sure the solution is unique (has not been used before)\n        require(\n            submitted[checker.input[0]].addr == address(0),\n            \"This solution has already been used\"\n        );\n        for (uint256 i = 0; i < solutions.length; i++) {\n            if (\n                solutions[i].index == checker.input[0] && checker.input[0] != 0\n            ) {\n                Solution storage solution = solutions[i];\n                submitted[checker.input[0]] = solutions[i];\n                super.mint(to, totalSupply(), tokenURI);\n                return;\n            }\n        }\n        revert(\"This solution doesn't exist\");\n    }\n}\n",
  "sourcePath": "/Users/adelmalik/Development/cours/Udacity/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7942
      ],
      "renamedVerifier": [
        7773
      ]
    },
    "id": 7943,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7767,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "id": 7768,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:7"
      },
      {
        "absolutePath": "project:/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7769,
        "nodeType": "ImportDirective",
        "scope": 7943,
        "sourceUnit": 8849,
        "src": "68:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7770,
        "nodeType": "ImportDirective",
        "scope": 7943,
        "sourceUnit": 1441,
        "src": "93:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7771,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8848,
              "src": "260:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8848",
                "typeString": "contract Verifier"
              }
            },
            "id": 7772,
            "nodeType": "InheritanceSpecifier",
            "src": "260:8:7"
          }
        ],
        "contractDependencies": [
          8848
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7773,
        "linearizedBaseContracts": [
          7773,
          8848
        ],
        "name": "renamedVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7943,
        "src": "232:41:7"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7774,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1440,
              "src": "408:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1440",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7775,
            "nodeType": "InheritanceSpecifier",
            "src": "408:17:7"
          }
        ],
        "contractDependencies": [
          398,
          452,
          498,
          988,
          1286,
          1395,
          1440,
          7765
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7942,
        "linearizedBaseContracts": [
          7942,
          1440,
          1395,
          7765,
          1286,
          988,
          498,
          452,
          398
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7777,
            "name": "verifier",
            "nodeType": "VariableDeclaration",
            "scope": 7942,
            "src": "432:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_renamedVerifier_$7773",
              "typeString": "contract renamedVerifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7776,
              "name": "renamedVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7773,
              "src": "432:15:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_renamedVerifier_$7773",
                "typeString": "contract renamedVerifier"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 7780,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 7942,
            "src": "462:48:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 7778,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "462:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5265616c20457374617465204d61726b6574706c616365",
              "id": 7779,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "485:25:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_54f5ffbd7ccf61658617d3f270a8bef41ad9d448e52b1aa06107325700521876",
                "typeString": "literal_string \"Real Estate Marketplace\""
              },
              "value": "Real Estate Marketplace"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 7783,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 7942,
            "src": "516:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 7781,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "516:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "52454d",
              "id": 7782,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "541:5:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_fc0537d4a98c750048b04b94dca6a652b8496eb8b5ea0927667c1023bc3e879d",
                "typeString": "literal_string \"REM\""
              },
              "value": "REM"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7790,
              "nodeType": "Block",
              "src": "606:2:7",
              "statements": []
            },
            "documentation": null,
            "id": 7791,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7786,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7780,
                    "src": "592:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7787,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7783,
                    "src": "598:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7788,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7785,
                  "name": "CustomERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1440,
                  "src": "574:17:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomERC721Token_$1440_$",
                    "typeString": "type(contract CustomERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "574:31:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "564:2:7"
            },
            "returnParameters": {
              "id": 7789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:0:7"
            },
            "scope": 7942,
            "src": "553:55:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7796,
            "members": [
              {
                "constant": false,
                "id": 7793,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7796,
                "src": "714:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7792,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "714:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7795,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 7796,
                "src": "737:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7794,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "737:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7942,
            "src": "688:68:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7799,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7942,
            "src": "810:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7796_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7797,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7796,
                "src": "810:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7796_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7798,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "810:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7796_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7803,
            "name": "submitted",
            "nodeType": "VariableDeclaration",
            "scope": 7942,
            "src": "910:46:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7796_storage_$",
              "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7802,
              "keyType": {
                "id": 7800,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "918:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "910:28:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7796_storage_$",
                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7801,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7796,
                "src": "929:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7796_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7811,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7805,
                  "indexed": true,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7811,
                  "src": "1053:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7807,
                  "indexed": true,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7811,
                  "src": "1084:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7809,
                  "indexed": false,
                  "name": "submitted",
                  "nodeType": "VariableDeclaration",
                  "scope": 7811,
                  "src": "1114:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7808,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1043:91:7"
            },
            "src": "1024:111:7"
          },
          {
            "body": {
              "id": 7835,
              "nodeType": "Block",
              "src": "1277:114:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7822,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7813,
                            "src": "1311:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7823,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8863,
                              "src": "1318:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1318:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 7821,
                          "name": "Solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7796,
                          "src": "1302:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Solution_$7796_storage_ptr_$",
                            "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                          }
                        },
                        "id": 7825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1302:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7796_memory",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7796_memory",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7818,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7799,
                        "src": "1287:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7796_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1287:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7796_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1287:43:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7827,
                  "nodeType": "ExpressionStatement",
                  "src": "1287:43:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7829,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7813,
                        "src": "1359:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7830,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8863,
                          "src": "1366:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1366:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 7832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1378:5:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7828,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7811,
                      "src": "1345:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,bool)"
                      }
                    },
                    "id": 7833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1345:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7834,
                  "nodeType": "EmitStatement",
                  "src": "1340:44:7"
                }
              ]
            },
            "documentation": null,
            "id": 7836,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7816,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7815,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 364,
                  "src": "1267:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1267:9:7"
              }
            ],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7813,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7836,
                  "src": "1245:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1244:15:7"
            },
            "returnParameters": {
              "id": 7817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1277:0:7"
            },
            "scope": 7942,
            "src": "1224:167:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Checker",
            "id": 7843,
            "members": [
              {
                "constant": false,
                "id": 7838,
                "name": "proof",
                "nodeType": "VariableDeclaration",
                "scope": 7843,
                "src": "1510:27:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proof_$8538_storage_ptr",
                  "typeString": "struct Verifier.Proof"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 7837,
                  "name": "renamedVerifier.Proof",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 8538,
                  "src": "1510:21:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8538_storage_ptr",
                    "typeString": "struct Verifier.Proof"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7842,
                "name": "input",
                "nodeType": "VariableDeclaration",
                "scope": 7843,
                "src": "1547:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                  "typeString": "uint256[1]"
                },
                "typeName": {
                  "baseType": {
                    "id": 7839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1547:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7841,
                  "length": {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 7840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1555:1:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "1547:10:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                    "typeString": "uint256[1]"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Checker",
            "nodeType": "StructDefinition",
            "scope": 7942,
            "src": "1485:85:7",
            "visibility": "public"
          },
          {
            "body": {
              "id": 7940,
              "nodeType": "Block",
              "src": "1750:781:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7855,
                              "name": "checker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7849,
                              "src": "1799:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checker_$7843_memory_ptr",
                                "typeString": "struct SolnSquareVerifier.Checker memory"
                              }
                            },
                            "id": 7856,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proof",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7838,
                            "src": "1799:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8538_memory",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7857,
                              "name": "checker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7849,
                              "src": "1814:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checker_$7843_memory_ptr",
                                "typeString": "struct SolnSquareVerifier.Checker memory"
                              }
                            },
                            "id": 7858,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "input",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7842,
                            "src": "1814:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory",
                              "typeString": "uint256[1] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8538_memory",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory",
                              "typeString": "uint256[1] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7853,
                            "name": "verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7777,
                            "src": "1781:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_renamedVerifier_$7773",
                              "typeString": "contract renamedVerifier"
                            }
                          },
                          "id": 7854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8847,
                          "src": "1781:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8538_memory_ptr_$_t_array$_t_uint256_$1_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[1] memory) view external returns (bool)"
                          }
                        },
                        "id": 7859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1781:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57726f6e6720766572696669636174696f6e",
                        "id": 7860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1842:20:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84f0463acee4e638154668caeb79b9eba638fc49dce9c833163c9453db48cab0",
                          "typeString": "literal_string \"Wrong verification\""
                        },
                        "value": "Wrong verification"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84f0463acee4e638154668caeb79b9eba638fc49dce9c833163c9453db48cab0",
                          "typeString": "literal_string \"Wrong verification\""
                        }
                      ],
                      "id": 7852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8866,
                        8867
                      ],
                      "referencedDeclaration": 8867,
                      "src": "1760:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1760:112:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7862,
                  "nodeType": "ExpressionStatement",
                  "src": "1760:112:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7864,
                              "name": "submitted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7803,
                              "src": "1977:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7796_storage_$",
                                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7869,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7865,
                                  "name": "checker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7849,
                                  "src": "1987:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checker_$7843_memory_ptr",
                                    "typeString": "struct SolnSquareVerifier.Checker memory"
                                  }
                                },
                                "id": 7866,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "input",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7842,
                                "src": "1987:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$1_memory",
                                  "typeString": "uint256[1] memory"
                                }
                              },
                              "id": 7868,
                              "indexExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 7867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2001:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1987:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1977:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7796_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7870,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7795,
                          "src": "1977:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2021:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2013:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2013:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1977:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320736f6c7574696f6e2068617320616c7265616479206265656e2075736564",
                        "id": 7875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2037:37:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa2a44bdc1fbd58e690775fcbb0af01ee2ff3b9b8ff07bcf05d0dcf687366d4a",
                          "typeString": "literal_string \"This solution has already been used\""
                        },
                        "value": "This solution has already been used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa2a44bdc1fbd58e690775fcbb0af01ee2ff3b9b8ff07bcf05d0dcf687366d4a",
                          "typeString": "literal_string \"This solution has already been used\""
                        }
                      ],
                      "id": 7863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8866,
                        8867
                      ],
                      "referencedDeclaration": 8867,
                      "src": "1956:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1956:128:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7877,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:128:7"
                },
                {
                  "body": {
                    "id": 7934,
                    "nodeType": "Block",
                    "src": "2141:337:7",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 7904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 7889,
                                  "name": "solutions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7799,
                                  "src": "2176:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Solution_$7796_storage_$dyn_storage",
                                    "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                                  }
                                },
                                "id": 7891,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 7890,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7879,
                                  "src": "2186:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2176:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Solution_$7796_storage",
                                  "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                }
                              },
                              "id": 7892,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "index",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7793,
                              "src": "2176:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7893,
                                  "name": "checker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7849,
                                  "src": "2198:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checker_$7843_memory_ptr",
                                    "typeString": "struct SolnSquareVerifier.Checker memory"
                                  }
                                },
                                "id": 7894,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "input",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7842,
                                "src": "2198:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$1_memory",
                                  "typeString": "uint256[1] memory"
                                }
                              },
                              "id": 7896,
                              "indexExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 7895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2212:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2198:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2176:38:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7898,
                                  "name": "checker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7849,
                                  "src": "2218:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checker_$7843_memory_ptr",
                                    "typeString": "struct SolnSquareVerifier.Checker memory"
                                  }
                                },
                                "id": 7899,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "input",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7842,
                                "src": "2218:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$1_memory",
                                  "typeString": "uint256[1] memory"
                                }
                              },
                              "id": 7901,
                              "indexExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 7900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2232:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2218:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2238:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2218:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2176:63:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 7933,
                        "nodeType": "IfStatement",
                        "src": "2155:313:7",
                        "trueBody": {
                          "id": 7932,
                          "nodeType": "Block",
                          "src": "2254:214:7",
                          "statements": [
                            {
                              "assignments": [
                                7906
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 7906,
                                  "name": "solution",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 7932,
                                  "src": "2272:25:7",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7796_storage_ptr",
                                    "typeString": "struct SolnSquareVerifier.Solution"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 7905,
                                    "name": "Solution",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 7796,
                                    "src": "2272:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Solution_$7796_storage_ptr",
                                      "typeString": "struct SolnSquareVerifier.Solution"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 7910,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 7907,
                                  "name": "solutions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7799,
                                  "src": "2300:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Solution_$7796_storage_$dyn_storage",
                                    "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                                  }
                                },
                                "id": 7909,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 7908,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7879,
                                  "src": "2310:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2300:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Solution_$7796_storage",
                                  "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2272:40:7"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 7920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 7911,
                                    "name": "submitted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7803,
                                    "src": "2330:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7796_storage_$",
                                      "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                                    }
                                  },
                                  "id": 7916,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 7912,
                                        "name": "checker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7849,
                                        "src": "2340:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Checker_$7843_memory_ptr",
                                          "typeString": "struct SolnSquareVerifier.Checker memory"
                                        }
                                      },
                                      "id": 7913,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "input",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7842,
                                      "src": "2340:13:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$1_memory",
                                        "typeString": "uint256[1] memory"
                                      }
                                    },
                                    "id": 7915,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 7914,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2354:1:7",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2340:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2330:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7796_storage",
                                    "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 7917,
                                    "name": "solutions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7799,
                                    "src": "2360:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Solution_$7796_storage_$dyn_storage",
                                      "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                                    }
                                  },
                                  "id": 7919,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 7918,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7879,
                                    "src": "2370:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2360:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7796_storage",
                                    "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                  }
                                },
                                "src": "2330:42:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Solution_$7796_storage",
                                  "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                }
                              },
                              "id": 7921,
                              "nodeType": "ExpressionStatement",
                              "src": "2330:42:7"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7925,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7845,
                                    "src": "2401:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 7926,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1052,
                                      "src": "2405:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 7927,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2405:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7928,
                                    "name": "tokenURI",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7847,
                                    "src": "2420:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7922,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8920,
                                    "src": "2390:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_super$_SolnSquareVerifier_$7942",
                                      "typeString": "contract super SolnSquareVerifier"
                                    }
                                  },
                                  "id": 7924,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1439,
                                  "src": "2390:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256,string memory) returns (bool)"
                                  }
                                },
                                "id": 7929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2390:39:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 7930,
                              "nodeType": "ExpressionStatement",
                              "src": "2390:39:7"
                            },
                            {
                              "expression": null,
                              "functionReturnParameters": 7851,
                              "id": 7931,
                              "nodeType": "Return",
                              "src": "2447:7:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7882,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7879,
                      "src": "2114:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7883,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7799,
                        "src": "2118:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7796_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7884,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2118:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2114:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7935,
                  "initializationExpression": {
                    "assignments": [
                      7879
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7879,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 7935,
                        "src": "2099:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7878,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2099:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 7881,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2111:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2099:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 7887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2136:3:7",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 7886,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7879,
                        "src": "2136:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7888,
                    "nodeType": "ExpressionStatement",
                    "src": "2136:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "2094:384:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320736f6c7574696f6e20646f65736e2774206578697374",
                        "id": 7937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2494:29:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b89950ce8886cea360a748e0cfc50b9b268b9f980ca54c56e6824a72374a771a",
                          "typeString": "literal_string \"This solution doesn't exist\""
                        },
                        "value": "This solution doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b89950ce8886cea360a748e0cfc50b9b268b9f980ca54c56e6824a72374a771a",
                          "typeString": "literal_string \"This solution doesn't exist\""
                        }
                      ],
                      "id": 7936,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8868,
                        8869
                      ],
                      "referencedDeclaration": 8869,
                      "src": "2487:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 7938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2487:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7939,
                  "nodeType": "ExpressionStatement",
                  "src": "2487:37:7"
                }
              ]
            },
            "documentation": null,
            "id": 7941,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7845,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7941,
                  "src": "1662:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1662:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7847,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 7941,
                  "src": "1682:22:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7846,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1682:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7849,
                  "name": "checker",
                  "nodeType": "VariableDeclaration",
                  "scope": 7941,
                  "src": "1714:22:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checker_$7843_memory_ptr",
                    "typeString": "struct SolnSquareVerifier.Checker"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7848,
                    "name": "Checker",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7843,
                    "src": "1714:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checker_$7843_storage_ptr",
                      "typeString": "struct SolnSquareVerifier.Checker"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1652:90:7"
            },
            "returnParameters": {
              "id": 7851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1750:0:7"
            },
            "scope": 7942,
            "src": "1639:892:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7943,
        "src": "377:2156:7"
      }
    ],
    "src": "0:2534:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7942
        ],
        "renamedVerifier": [
          7773
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7767,
        "name": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7768,
        "name": "PragmaDirective",
        "src": "33:33:7"
      },
      {
        "attributes": {
          "SourceUnit": 8849,
          "absolutePath": "project:/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7943,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7769,
        "name": "ImportDirective",
        "src": "68:24:7"
      },
      {
        "attributes": {
          "SourceUnit": 1441,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7943,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7770,
        "name": "ImportDirective",
        "src": "93:30:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            8848
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7773,
            8848
          ],
          "name": "renamedVerifier",
          "nodes": [
            null
          ],
          "scope": 7943
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8848,
                  "type": "contract Verifier"
                },
                "id": 7771,
                "name": "UserDefinedTypeName",
                "src": "260:8:7"
              }
            ],
            "id": 7772,
            "name": "InheritanceSpecifier",
            "src": "260:8:7"
          }
        ],
        "id": 7773,
        "name": "ContractDefinition",
        "src": "232:41:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            398,
            452,
            498,
            988,
            1286,
            1395,
            1440,
            7765
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7942,
            1440,
            1395,
            7765,
            1286,
            988,
            498,
            452,
            398
          ],
          "name": "SolnSquareVerifier",
          "scope": 7943
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1440,
                  "type": "contract CustomERC721Token"
                },
                "id": 7774,
                "name": "UserDefinedTypeName",
                "src": "408:17:7"
              }
            ],
            "id": 7775,
            "name": "InheritanceSpecifier",
            "src": "408:17:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "verifier",
              "scope": 7942,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract renamedVerifier",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "renamedVerifier",
                  "referencedDeclaration": 7773,
                  "type": "contract renamedVerifier"
                },
                "id": 7776,
                "name": "UserDefinedTypeName",
                "src": "432:15:7"
              }
            ],
            "id": 7777,
            "name": "VariableDeclaration",
            "src": "432:24:7"
          },
          {
            "attributes": {
              "constant": true,
              "name": "name",
              "scope": 7942,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 7778,
                "name": "ElementaryTypeName",
                "src": "462:6:7"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "5265616c20457374617465204d61726b6574706c616365",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"Real Estate Marketplace\"",
                  "value": "Real Estate Marketplace"
                },
                "id": 7779,
                "name": "Literal",
                "src": "485:25:7"
              }
            ],
            "id": 7780,
            "name": "VariableDeclaration",
            "src": "462:48:7"
          },
          {
            "attributes": {
              "constant": true,
              "name": "symbol",
              "scope": 7942,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 7781,
                "name": "ElementaryTypeName",
                "src": "516:6:7"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "52454d",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"REM\"",
                  "value": "REM"
                },
                "id": 7782,
                "name": "Literal",
                "src": "541:5:7"
              }
            ],
            "id": 7783,
            "name": "VariableDeclaration",
            "src": "516:30:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 7942,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7784,
                "name": "ParameterList",
                "src": "564:2:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7789,
                "name": "ParameterList",
                "src": "606:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1440,
                      "type": "type(contract CustomERC721Token)",
                      "value": "CustomERC721Token"
                    },
                    "id": 7785,
                    "name": "Identifier",
                    "src": "574:17:7"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7780,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 7786,
                    "name": "Identifier",
                    "src": "592:4:7"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7783,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 7787,
                    "name": "Identifier",
                    "src": "598:6:7"
                  }
                ],
                "id": 7788,
                "name": "ModifierInvocation",
                "src": "574:31:7"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 7790,
                "name": "Block",
                "src": "606:2:7"
              }
            ],
            "id": 7791,
            "name": "FunctionDefinition",
            "src": "553:55:7"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7942,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7796,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7792,
                    "name": "ElementaryTypeName",
                    "src": "714:7:7"
                  }
                ],
                "id": 7793,
                "name": "VariableDeclaration",
                "src": "714:13:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "addr",
                  "scope": 7796,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7794,
                    "name": "ElementaryTypeName",
                    "src": "737:7:7"
                  }
                ],
                "id": 7795,
                "name": "VariableDeclaration",
                "src": "737:12:7"
              }
            ],
            "id": 7796,
            "name": "StructDefinition",
            "src": "688:68:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7942,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7796,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7797,
                    "name": "UserDefinedTypeName",
                    "src": "810:8:7"
                  }
                ],
                "id": 7798,
                "name": "ArrayTypeName",
                "src": "810:10:7"
              }
            ],
            "id": 7799,
            "name": "VariableDeclaration",
            "src": "810:28:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "submitted",
              "scope": 7942,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7800,
                    "name": "ElementaryTypeName",
                    "src": "918:7:7"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7796,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7801,
                    "name": "UserDefinedTypeName",
                    "src": "929:8:7"
                  }
                ],
                "id": 7802,
                "name": "Mapping",
                "src": "910:28:7"
              }
            ],
            "id": 7803,
            "name": "VariableDeclaration",
            "src": "910:46:7"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "index",
                      "scope": 7811,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7804,
                        "name": "ElementaryTypeName",
                        "src": "1053:7:7"
                      }
                    ],
                    "id": 7805,
                    "name": "VariableDeclaration",
                    "src": "1053:21:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "addr",
                      "scope": 7811,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7806,
                        "name": "ElementaryTypeName",
                        "src": "1084:7:7"
                      }
                    ],
                    "id": 7807,
                    "name": "VariableDeclaration",
                    "src": "1084:20:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "submitted",
                      "scope": 7811,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7808,
                        "name": "ElementaryTypeName",
                        "src": "1114:4:7"
                      }
                    ],
                    "id": 7809,
                    "name": "VariableDeclaration",
                    "src": "1114:14:7"
                  }
                ],
                "id": 7810,
                "name": "ParameterList",
                "src": "1043:91:7"
              }
            ],
            "id": 7811,
            "name": "EventDefinition",
            "src": "1024:111:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addSolution",
              "scope": 7942,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 7836,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7812,
                        "name": "ElementaryTypeName",
                        "src": "1245:7:7"
                      }
                    ],
                    "id": 7813,
                    "name": "VariableDeclaration",
                    "src": "1245:13:7"
                  }
                ],
                "id": 7814,
                "name": "ParameterList",
                "src": "1244:15:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7817,
                "name": "ParameterList",
                "src": "1277:0:7"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 364,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 7815,
                    "name": "Identifier",
                    "src": "1267:9:7"
                  }
                ],
                "id": 7816,
                "name": "ModifierInvocation",
                "src": "1267:9:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7796_memory",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7799,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7818,
                                "name": "Identifier",
                                "src": "1287:9:7"
                              }
                            ],
                            "id": 7820,
                            "name": "MemberAccess",
                            "src": "1287:14:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7796,
                                  "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                                  "value": "Solution"
                                },
                                "id": 7821,
                                "name": "Identifier",
                                "src": "1302:8:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7813,
                                  "type": "uint256",
                                  "value": "index"
                                },
                                "id": 7822,
                                "name": "Identifier",
                                "src": "1311:5:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8863,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7823,
                                    "name": "Identifier",
                                    "src": "1318:3:7"
                                  }
                                ],
                                "id": 7824,
                                "name": "MemberAccess",
                                "src": "1318:10:7"
                              }
                            ],
                            "id": 7825,
                            "name": "FunctionCall",
                            "src": "1302:27:7"
                          }
                        ],
                        "id": 7826,
                        "name": "FunctionCall",
                        "src": "1287:43:7"
                      }
                    ],
                    "id": 7827,
                    "name": "ExpressionStatement",
                    "src": "1287:43:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7811,
                              "type": "function (uint256,address,bool)",
                              "value": "SolutionAdded"
                            },
                            "id": 7828,
                            "name": "Identifier",
                            "src": "1345:13:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7813,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 7829,
                            "name": "Identifier",
                            "src": "1359:5:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8863,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7830,
                                "name": "Identifier",
                                "src": "1366:3:7"
                              }
                            ],
                            "id": 7831,
                            "name": "MemberAccess",
                            "src": "1366:10:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 7832,
                            "name": "Literal",
                            "src": "1378:5:7"
                          }
                        ],
                        "id": 7833,
                        "name": "FunctionCall",
                        "src": "1345:39:7"
                      }
                    ],
                    "id": 7834,
                    "name": "EmitStatement",
                    "src": "1340:44:7"
                  }
                ],
                "id": 7835,
                "name": "Block",
                "src": "1277:114:7"
              }
            ],
            "id": 7836,
            "name": "FunctionDefinition",
            "src": "1224:167:7"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Checker",
              "name": "Checker",
              "scope": 7942,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "proof",
                  "scope": 7843,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct Verifier.Proof",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "renamedVerifier.Proof",
                      "referencedDeclaration": 8538,
                      "type": "struct Verifier.Proof"
                    },
                    "id": 7837,
                    "name": "UserDefinedTypeName",
                    "src": "1510:21:7"
                  }
                ],
                "id": 7838,
                "name": "VariableDeclaration",
                "src": "1510:27:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "input",
                  "scope": 7843,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256[1]",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "type": "uint256[1]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7839,
                        "name": "ElementaryTypeName",
                        "src": "1547:7:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "31",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 1",
                          "value": "1"
                        },
                        "id": 7840,
                        "name": "Literal",
                        "src": "1555:1:7"
                      }
                    ],
                    "id": 7841,
                    "name": "ArrayTypeName",
                    "src": "1547:10:7"
                  }
                ],
                "id": 7842,
                "name": "VariableDeclaration",
                "src": "1547:16:7"
              }
            ],
            "id": 7843,
            "name": "StructDefinition",
            "src": "1485:85:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 7942,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7941,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7844,
                        "name": "ElementaryTypeName",
                        "src": "1662:7:7"
                      }
                    ],
                    "id": 7845,
                    "name": "VariableDeclaration",
                    "src": "1662:10:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenURI",
                      "scope": 7941,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7846,
                        "name": "ElementaryTypeName",
                        "src": "1682:6:7"
                      }
                    ],
                    "id": 7847,
                    "name": "VariableDeclaration",
                    "src": "1682:22:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "checker",
                      "scope": 7941,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct SolnSquareVerifier.Checker",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Checker",
                          "referencedDeclaration": 7843,
                          "type": "struct SolnSquareVerifier.Checker"
                        },
                        "id": 7848,
                        "name": "UserDefinedTypeName",
                        "src": "1714:7:7"
                      }
                    ],
                    "id": 7849,
                    "name": "VariableDeclaration",
                    "src": "1714:22:7"
                  }
                ],
                "id": 7850,
                "name": "ParameterList",
                "src": "1652:90:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7851,
                "name": "ParameterList",
                "src": "1750:0:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_84f0463acee4e638154668caeb79b9eba638fc49dce9c833163c9453db48cab0",
                                  "typeString": "literal_string \"Wrong verification\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8866,
                                8867
                              ],
                              "referencedDeclaration": 8867,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7852,
                            "name": "Identifier",
                            "src": "1760:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$8538_memory",
                                      "typeString": "struct Verifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$1_memory",
                                      "typeString": "uint256[1] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifyTx",
                                  "referencedDeclaration": 8847,
                                  "type": "function (struct Verifier.Proof memory,uint256[1] memory) view external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7777,
                                      "type": "contract renamedVerifier",
                                      "value": "verifier"
                                    },
                                    "id": 7853,
                                    "name": "Identifier",
                                    "src": "1781:8:7"
                                  }
                                ],
                                "id": 7854,
                                "name": "MemberAccess",
                                "src": "1781:17:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "proof",
                                  "referencedDeclaration": 7838,
                                  "type": "struct Verifier.Proof memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7849,
                                      "type": "struct SolnSquareVerifier.Checker memory",
                                      "value": "checker"
                                    },
                                    "id": 7855,
                                    "name": "Identifier",
                                    "src": "1799:7:7"
                                  }
                                ],
                                "id": 7856,
                                "name": "MemberAccess",
                                "src": "1799:13:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "input",
                                  "referencedDeclaration": 7842,
                                  "type": "uint256[1] memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7849,
                                      "type": "struct SolnSquareVerifier.Checker memory",
                                      "value": "checker"
                                    },
                                    "id": 7857,
                                    "name": "Identifier",
                                    "src": "1814:7:7"
                                  }
                                ],
                                "id": 7858,
                                "name": "MemberAccess",
                                "src": "1814:13:7"
                              }
                            ],
                            "id": 7859,
                            "name": "FunctionCall",
                            "src": "1781:47:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "57726f6e6720766572696669636174696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Wrong verification\"",
                              "value": "Wrong verification"
                            },
                            "id": 7860,
                            "name": "Literal",
                            "src": "1842:20:7"
                          }
                        ],
                        "id": 7861,
                        "name": "FunctionCall",
                        "src": "1760:112:7"
                      }
                    ],
                    "id": 7862,
                    "name": "ExpressionStatement",
                    "src": "1760:112:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fa2a44bdc1fbd58e690775fcbb0af01ee2ff3b9b8ff07bcf05d0dcf687366d4a",
                                  "typeString": "literal_string \"This solution has already been used\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8866,
                                8867
                              ],
                              "referencedDeclaration": 8867,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7863,
                            "name": "Identifier",
                            "src": "1956:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "addr",
                                  "referencedDeclaration": 7795,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7803,
                                          "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "submitted"
                                        },
                                        "id": 7864,
                                        "name": "Identifier",
                                        "src": "1977:9:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "input",
                                              "referencedDeclaration": 7842,
                                              "type": "uint256[1] memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 7849,
                                                  "type": "struct SolnSquareVerifier.Checker memory",
                                                  "value": "checker"
                                                },
                                                "id": 7865,
                                                "name": "Identifier",
                                                "src": "1987:7:7"
                                              }
                                            ],
                                            "id": 7866,
                                            "name": "MemberAccess",
                                            "src": "1987:13:7"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 7867,
                                            "name": "Literal",
                                            "src": "2001:1:7"
                                          }
                                        ],
                                        "id": 7868,
                                        "name": "IndexAccess",
                                        "src": "1987:16:7"
                                      }
                                    ],
                                    "id": 7869,
                                    "name": "IndexAccess",
                                    "src": "1977:27:7"
                                  }
                                ],
                                "id": 7870,
                                "name": "MemberAccess",
                                "src": "1977:32:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7871,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2013:7:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7872,
                                    "name": "Literal",
                                    "src": "2021:1:7"
                                  }
                                ],
                                "id": 7873,
                                "name": "FunctionCall",
                                "src": "2013:10:7"
                              }
                            ],
                            "id": 7874,
                            "name": "BinaryOperation",
                            "src": "1977:46:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5468697320736f6c7574696f6e2068617320616c7265616479206265656e2075736564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"This solution has already been used\"",
                              "value": "This solution has already been used"
                            },
                            "id": 7875,
                            "name": "Literal",
                            "src": "2037:37:7"
                          }
                        ],
                        "id": 7876,
                        "name": "FunctionCall",
                        "src": "1956:128:7"
                      }
                    ],
                    "id": 7877,
                    "name": "ExpressionStatement",
                    "src": "1956:128:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            7879
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 7935,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 7878,
                                "name": "ElementaryTypeName",
                                "src": "2099:7:7"
                              }
                            ],
                            "id": 7879,
                            "name": "VariableDeclaration",
                            "src": "2099:9:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 7880,
                            "name": "Literal",
                            "src": "2111:1:7"
                          }
                        ],
                        "id": 7881,
                        "name": "VariableDeclarationStatement",
                        "src": "2099:13:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7879,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 7882,
                            "name": "Identifier",
                            "src": "2114:1:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7799,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7883,
                                "name": "Identifier",
                                "src": "2118:9:7"
                              }
                            ],
                            "id": 7884,
                            "name": "MemberAccess",
                            "src": "2118:16:7"
                          }
                        ],
                        "id": 7885,
                        "name": "BinaryOperation",
                        "src": "2114:20:7"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7879,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 7886,
                                "name": "Identifier",
                                "src": "2136:1:7"
                              }
                            ],
                            "id": 7887,
                            "name": "UnaryOperation",
                            "src": "2136:3:7"
                          }
                        ],
                        "id": 7888,
                        "name": "ExpressionStatement",
                        "src": "2136:3:7"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "index",
                                          "referencedDeclaration": 7793,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct SolnSquareVerifier.Solution storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 7799,
                                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                                  "value": "solutions"
                                                },
                                                "id": 7889,
                                                "name": "Identifier",
                                                "src": "2176:9:7"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 7879,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 7890,
                                                "name": "Identifier",
                                                "src": "2186:1:7"
                                              }
                                            ],
                                            "id": 7891,
                                            "name": "IndexAccess",
                                            "src": "2176:12:7"
                                          }
                                        ],
                                        "id": 7892,
                                        "name": "MemberAccess",
                                        "src": "2176:18:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "input",
                                              "referencedDeclaration": 7842,
                                              "type": "uint256[1] memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 7849,
                                                  "type": "struct SolnSquareVerifier.Checker memory",
                                                  "value": "checker"
                                                },
                                                "id": 7893,
                                                "name": "Identifier",
                                                "src": "2198:7:7"
                                              }
                                            ],
                                            "id": 7894,
                                            "name": "MemberAccess",
                                            "src": "2198:13:7"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 7895,
                                            "name": "Literal",
                                            "src": "2212:1:7"
                                          }
                                        ],
                                        "id": 7896,
                                        "name": "IndexAccess",
                                        "src": "2198:16:7"
                                      }
                                    ],
                                    "id": 7897,
                                    "name": "BinaryOperation",
                                    "src": "2176:38:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "!=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "input",
                                              "referencedDeclaration": 7842,
                                              "type": "uint256[1] memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 7849,
                                                  "type": "struct SolnSquareVerifier.Checker memory",
                                                  "value": "checker"
                                                },
                                                "id": 7898,
                                                "name": "Identifier",
                                                "src": "2218:7:7"
                                              }
                                            ],
                                            "id": 7899,
                                            "name": "MemberAccess",
                                            "src": "2218:13:7"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 7900,
                                            "name": "Literal",
                                            "src": "2232:1:7"
                                          }
                                        ],
                                        "id": 7901,
                                        "name": "IndexAccess",
                                        "src": "2218:16:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 7902,
                                        "name": "Literal",
                                        "src": "2238:1:7"
                                      }
                                    ],
                                    "id": 7903,
                                    "name": "BinaryOperation",
                                    "src": "2218:21:7"
                                  }
                                ],
                                "id": 7904,
                                "name": "BinaryOperation",
                                "src": "2176:63:7"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "assignments": [
                                        7906
                                      ]
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "constant": false,
                                          "name": "solution",
                                          "scope": 7932,
                                          "stateVariable": false,
                                          "storageLocation": "storage",
                                          "type": "struct SolnSquareVerifier.Solution",
                                          "value": null,
                                          "visibility": "internal"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "contractScope": null,
                                              "name": "Solution",
                                              "referencedDeclaration": 7796,
                                              "type": "struct SolnSquareVerifier.Solution"
                                            },
                                            "id": 7905,
                                            "name": "UserDefinedTypeName",
                                            "src": "2272:8:7"
                                          }
                                        ],
                                        "id": 7906,
                                        "name": "VariableDeclaration",
                                        "src": "2272:25:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct SolnSquareVerifier.Solution storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7799,
                                              "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                              "value": "solutions"
                                            },
                                            "id": 7907,
                                            "name": "Identifier",
                                            "src": "2300:9:7"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7879,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 7908,
                                            "name": "Identifier",
                                            "src": "2310:1:7"
                                          }
                                        ],
                                        "id": 7909,
                                        "name": "IndexAccess",
                                        "src": "2300:12:7"
                                      }
                                    ],
                                    "id": 7910,
                                    "name": "VariableDeclarationStatement",
                                    "src": "2272:40:7"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "struct SolnSquareVerifier.Solution storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "struct SolnSquareVerifier.Solution storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 7803,
                                                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                                                  "value": "submitted"
                                                },
                                                "id": 7911,
                                                "name": "Identifier",
                                                "src": "2330:9:7"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "input",
                                                      "referencedDeclaration": 7842,
                                                      "type": "uint256[1] memory"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 7849,
                                                          "type": "struct SolnSquareVerifier.Checker memory",
                                                          "value": "checker"
                                                        },
                                                        "id": 7912,
                                                        "name": "Identifier",
                                                        "src": "2340:7:7"
                                                      }
                                                    ],
                                                    "id": 7913,
                                                    "name": "MemberAccess",
                                                    "src": "2340:13:7"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "hexvalue": "30",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "subdenomination": null,
                                                      "token": "number",
                                                      "type": "int_const 0",
                                                      "value": "0"
                                                    },
                                                    "id": 7914,
                                                    "name": "Literal",
                                                    "src": "2354:1:7"
                                                  }
                                                ],
                                                "id": 7915,
                                                "name": "IndexAccess",
                                                "src": "2340:16:7"
                                              }
                                            ],
                                            "id": 7916,
                                            "name": "IndexAccess",
                                            "src": "2330:27:7"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct SolnSquareVerifier.Solution storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 7799,
                                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                                  "value": "solutions"
                                                },
                                                "id": 7917,
                                                "name": "Identifier",
                                                "src": "2360:9:7"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 7879,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 7918,
                                                "name": "Identifier",
                                                "src": "2370:1:7"
                                              }
                                            ],
                                            "id": 7919,
                                            "name": "IndexAccess",
                                            "src": "2360:12:7"
                                          }
                                        ],
                                        "id": 7920,
                                        "name": "Assignment",
                                        "src": "2330:42:7"
                                      }
                                    ],
                                    "id": 7921,
                                    "name": "ExpressionStatement",
                                    "src": "2330:42:7"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bool",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_string_memory_ptr",
                                                  "typeString": "string memory"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "mint",
                                              "referencedDeclaration": 1439,
                                              "type": "function (address,uint256,string memory) returns (bool)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 8920,
                                                  "type": "contract super SolnSquareVerifier",
                                                  "value": "super"
                                                },
                                                "id": 7922,
                                                "name": "Identifier",
                                                "src": "2390:5:7"
                                              }
                                            ],
                                            "id": 7924,
                                            "name": "MemberAccess",
                                            "src": "2390:10:7"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7845,
                                              "type": "address",
                                              "value": "to"
                                            },
                                            "id": 7925,
                                            "name": "Identifier",
                                            "src": "2401:2:7"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                null
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    null
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1052,
                                                  "type": "function () view returns (uint256)",
                                                  "value": "totalSupply"
                                                },
                                                "id": 7926,
                                                "name": "Identifier",
                                                "src": "2405:11:7"
                                              }
                                            ],
                                            "id": 7927,
                                            "name": "FunctionCall",
                                            "src": "2405:13:7"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7847,
                                              "type": "string memory",
                                              "value": "tokenURI"
                                            },
                                            "id": 7928,
                                            "name": "Identifier",
                                            "src": "2420:8:7"
                                          }
                                        ],
                                        "id": 7929,
                                        "name": "FunctionCall",
                                        "src": "2390:39:7"
                                      }
                                    ],
                                    "id": 7930,
                                    "name": "ExpressionStatement",
                                    "src": "2390:39:7"
                                  },
                                  {
                                    "attributes": {
                                      "expression": null,
                                      "functionReturnParameters": 7851
                                    },
                                    "id": 7931,
                                    "name": "Return",
                                    "src": "2447:7:7"
                                  }
                                ],
                                "id": 7932,
                                "name": "Block",
                                "src": "2254:214:7"
                              }
                            ],
                            "id": 7933,
                            "name": "IfStatement",
                            "src": "2155:313:7"
                          }
                        ],
                        "id": 7934,
                        "name": "Block",
                        "src": "2141:337:7"
                      }
                    ],
                    "id": 7935,
                    "name": "ForStatement",
                    "src": "2094:384:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b89950ce8886cea360a748e0cfc50b9b268b9f980ca54c56e6824a72374a771a",
                                  "typeString": "literal_string \"This solution doesn't exist\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8868,
                                8869
                              ],
                              "referencedDeclaration": 8869,
                              "type": "function (string memory) pure",
                              "value": "revert"
                            },
                            "id": 7936,
                            "name": "Identifier",
                            "src": "2487:6:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5468697320736f6c7574696f6e20646f65736e2774206578697374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"This solution doesn't exist\"",
                              "value": "This solution doesn't exist"
                            },
                            "id": 7937,
                            "name": "Literal",
                            "src": "2494:29:7"
                          }
                        ],
                        "id": 7938,
                        "name": "FunctionCall",
                        "src": "2487:37:7"
                      }
                    ],
                    "id": 7939,
                    "name": "ExpressionStatement",
                    "src": "2487:37:7"
                  }
                ],
                "id": 7940,
                "name": "Block",
                "src": "1750:781:7"
              }
            ],
            "id": 7941,
            "name": "FunctionDefinition",
            "src": "1639:892:7"
          }
        ],
        "id": 7942,
        "name": "ContractDefinition",
        "src": "377:2156:7"
      }
    ],
    "id": 7943,
    "name": "SourceUnit",
    "src": "0:2534:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "proprio",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "acquereur",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "emiter",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x01294b83361f7715b695189a469e96a6302a388f977ab3227ae6dbf84206e283": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "submitted",
              "type": "bool"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xff2b959f2bcdb44c7ecb4b16dae055431019d7350607125cfc2b74a06632c90e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "emiter",
              "type": "address"
            }
          ],
          "name": "UnPaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xF8561e4e1F1479CDE7b7B8f0e0eA75bb78732e07",
      "transactionHash": "0x5aacaaa8ce5a878f0983e9583c5b2a82901605738681dbd887fca85ce64d0837"
    },
    "1660028882608": {
      "events": {},
      "links": {},
      "address": "0x20FD8fd0b4D14C2b694F74B1A2b3b8Bda2296b2e",
      "transactionHash": "0x1499db0e1a9f663d44753ec8ffc9fcb2126217c1247dc5fe9f9d3080027bebdf"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-08-10T09:11:07.283Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}